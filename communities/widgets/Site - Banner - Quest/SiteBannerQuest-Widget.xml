<scriptedContentFragments>
	<scriptedContentFragment name="${resource:SiteBanner} - Quest" version="9.2.0.1667" description="${resource:SiteBannerDescription}" instanceIdentifier="b8476577f75348f294c9a2e161119e5d" theme="" isCacheable="true" varyCacheByUser="true" showHeaderByDefault="false" cssClass="site-banner">
		<contentScript><![CDATA[#set ($links = $core_v2_page.ParseQueryString($core_v2_widget.GetCustomValue('links','Link=Notifications&amp;Link=Inbox&amp;Link=Bookmarks&amp;Link=User')))
#set ($hasLinks = false)

#set ($user = $core_v2_user.Accessing)
#set ($isRegistered = $core_v2_user.IsRegistered($user.Id))
#set ($isImpersonated = $core_v2_authentication.IsImpersonated())
#set ($impersonator = $core_v2_authentication.Impersonator())

#set ($listTemplate = 'site-banner-list-template')
#set ($notificationPreferenceTemplate = 'site-banner-notification-preferences-template')
#set ($bookmarkFilterTemplate = 'site-banner-bookmark-filter-template')
#set ($notificationFilterTemplate = 'site-banner-notification-filter-template')
#set ($userTemplate = 'site-banner-user-template')
#set ($searchFilterTemplate = 'site-banner-search-filter-template')
#set ($notificationsUnread = 0)
#set ($conversationsUnread = 0)
#set ($includeJavascript = false)
#set ($isBookmarked = false)
#set ($currentContentId = '')

#set ($currentContent = false)
#set ($currentContent = $core_v2_content.Current)
#set ($currentApplication = false)
#set ($currentApplication = $core_v2_application.Current)
#set ($currentGroup = false)
#set ($currentGroup = $core_v2_group.Current)
#set ($rootGroup = false)
#set ($rootGroup = $core_v2_group.Root)
#if ($rootGroup.Id == $currentGroup.Id)
	#set ($currentGroup = false)
#end

#set($siteSearch = $core_v2_widget.GetCustomValue('siteSearch', ''))
#set($useQuestFooter = $core_v2_widget.GetCustomValue('useQuestFooter', ''))
#set($siteBrand = $core_v2_widget.GetCustomValue('siteBrand', 'dsg'))
#set($navHTML = $core_v2_ui.Render($core_v2_widget.GetHtmlValue('navHTML','')))

## mark any unread notifications for the current piece of content as read
#if ($currentContent && $isRegistered)

	## detect if current content is actually an application
	#set ($isApplication = false)
	#set ($application = $currentContent.Application)
	#if (!$application || $application.ApplicationId == $currentContent.ContentId)
		#set ($isApplication = true)
	#end

	#if (!$isApplication)
		## load and mark as read any unread notifications for this content
		#set ($unreadContentNotifications = $core_v2_notification.List("%{ ContentId = $currentContent.ContentId, ContentTypeId = $currentContent.ContentTypeId, IsRead = 'false' }"))
		#foreach ($unreadNotification in $unreadContentNotifications)
			#set ($updatedNotification = $core_v2_notification.Update($unreadNotification.NotificationId, "%{ MarkAsRead = 'true' }"))
		#end

		## Forum Reply Notifications are generally made against Forum Threads, not Replies. So also, mark any notifications for their parent threads, explicitly.
		#if ($currentContent.ContentTypeId == $core_v2_forumReply.ContentTypeId)
			#set ($forumReply = $core_v2_forumReply.Get($currentContent.ContentId))
			#if ($forumReply)
				#set ($forumThread = $core_v2_forumThread.Get($forumReply.ThreadId))
				#if ($forumThread)
					## load and mark as read any unread notifications for this forum thread
					#set ($unreadContentNotifications = $core_v2_notification.List("%{ ContentId = $forumThread.ContentId, ContentTypeId = $forumThread.forumThreadContentTypeId, IsRead = 'false' }"))
					#foreach ($unreadNotification in $unreadContentNotifications)
						#set ($updatedNotification = $core_v2_notification.Update($unreadNotification.NotificationId, "%{ MarkAsRead = 'true' }"))
					#end
				#end
			#end
		#end
	#end

#end

## site navigation
#set ($hasSiteNavigation = false)
#set ($siteNavigationUrl = '')
#set ($siteNavigationType = $core_v2_widget.GetStringValue('siteNavigation', 'exclude'))

#set ($searchId = $core_v2_widget.UniqueId('Search'))
#set ($bannerId = $core_v2_widget.UniqueId('banner'))
#set ($searchFieldsId = $core_v2_widget.UniqueId('searchFields'))
#set ($bannerSiteLinksId = $core_v2_widget.UniqueId('bannerSiteLinks'))
#set ($bannerUserLinksId = $core_v2_widget.UniqueId('bannerLinks'))
#set ($handheldSearchFieldsId = $core_v2_widget.UniqueId('handheldSearchFields'))
#set ($handheldBannerUserLinksId = $core_v2_widget.UniqueId('handheldBannerLinks'))
#set ($handheldSearchFieldsLinkId = $core_v2_widget.UniqueId('handheldSearchFieldsLink'))
#set ($handheldSiteNavigationLinkId = $core_v2_widget.UniqueId('handheldSiteNavigationLink'))
#set ($handheldBannerUserLinksLinkId = $core_v2_widget.UniqueId('handheldBannerLinksLink'))
#set ($handheldBannerUserLinksCountId = $core_v2_widget.UniqueId('handheldBannerLinksCount'))
#set ($handheldSiteLinksLinkId = $core_v2_widget.UniqueId('handheldSiteLinksLink'))
#set ($handheldSiteLinksId = $core_v2_widget.UniqueId('handheldSiteLinks'))
#set ($utilityDropdown = $core_v2_widget.UniqueId('utilityDropdown'))

#set ($currentSeachQuery = '')
#set ($currentSeachQuery = $core_v2_encoding.HtmlEncode($core_v2_page.GetQueryStringValue('q')))

<header class="masthead" id="$core_v2_encoding.HtmlAttributeEncode($bannerId)">
	<nav class="navbar" role="navigation">
		<div class="utility-section-wrapper">
			<div class="utility-section">
				<div class="navbar-brand">
					<a href="/">
					    #if ($siteBrand == "quest")
						<img src="/images/shared/quest-logo.png">
						#elseif ($siteBrand == "dsg")
						<img src="/images/shared/logo-blue.png">
						#end
					</a>
				</div>

				<div id="$core_v2_encoding.HtmlAttributeEncode($searchFieldsId)" class="search-container">
					<div>
						<input class="search-query form-control" autocomplete="off" type="search" placeholder="$core_v2_encoding.HtmlAttributeEncode($core_v2_language.GetResource('Search'))" id="$core_v2_encoding.HtmlAttributeEncode($searchId)" value="$!currentSeachQuery" />
						<button class="btn">
							<i class="glyphicon glyphicon-search"></i>
						</button>
					</div>
					<div class="autocomplete"></div>
				</div>

				<div class="nav-container">
			    #if ($siteNavigationType == "quest")
			    <div class="main-nav-section" data-ajax="true">
			        <div class="shadow-overlay-left"></div>
			    </div>
			    #elseif ($siteNavigationType == "custom")
			    <div class="main-nav-section">
					<div class="shadow-overlay-left"></div>
						$navHTML
					</div>
				  #end
				</div>

				<ul class="utility desktop" id="$core_v2_encoding.HtmlAttributeEncode($bannerUserLinksId)">
					<li class="dropdown mobile-search-button search-button">
						<a href="#">
							<span class="top-search-icon"><i class="glyphicon glyphicon-search"></i></span>
						</a>
					</li>
            #set ($bannerLinks = $links.Values('Link'))
            #foreach($link in $bannerLinks)
            #beforeall
            #each
              #set($url = false)
              #if($link == 'Bookmarks' && $isRegistered)
                <li class="mobile">
                  <a href="#" class="bookmarks" id="$core_v2_widget.UniqueId('bookmarks')" title="$core_v2_encoding.HtmlAttributeEncode($core_v2_language.GetResource('Bookmarks'))">$core_v2_language.GetResource('Bookmarks')</a>
                </li>
                #set ($hasLinks = true)

                ## build dynamic lists of all content types, application types, and container types for filtering
                #set ($allContentTypes = $core_v2_contentType.List())
                #set ($contentTypes = "")
                #set ($applicationContentTypes = "")
                #set ($containerContentTypes = "")
                #foreach ($type in $allContentTypes)
                  #if ($core_v2_bookmark.SupportsBookmarks($type.Id))
                    #set ($containerType = false)
                    #set ($containerType = $core_v2_containerType.Get($type.Id))
                    #if ($containerType && $containerType.Id)
                      #set ($containerContentTypes = "${containerContentTypes}${type.Id}:${type.Name},")
                    #else
                      #set ($applicationType = false)
                      #set ($applicationType = $core_v2_applicationType.Get($type.Id))
                      #if ($applicationType && $applicationType.Id)
                        #set ($applicationContentTypes = "${applicationContentTypes}${type.Id},")
                      #else
                        #set ($contentTypes = "${contentTypes}${type.Id},")
                      #end
                    #end
                  #end
                #end

              #elseif($link == 'Notifications' && $isRegistered)
                <li class="mobile">
                  <a href="#" class="notifications" id="$core_v2_widget.UniqueId('notifications')">$core_v2_language.GetResource('Notifications')</a>
                </li>
                #set ($hasLinks = true)
                #set ($options = "%{ IsRead = 'False', PageSize = 1 }")
                #set ($conversationMessageNotificationFilterName = "_Filters_${core_v2_conversationMessage.NotificationTypeId}")
                $options.Add($conversationMessageNotificationFilterName, 'Exclude')
                #set ($notificationsUnread = $core_v2_notification.List($options).TotalCount)

              #elseif($link == 'User')
                #if ($isRegistered)
                  <li class="mobile">
                    <a href="#" class="internal-link user" id="$core_v2_encoding.HtmlAttributeEncode($core_v2_widget.UniqueId('user'))" title="$core_v2_encoding.HtmlAttributeEncode($core_v2_user.Accessing.DisplayName)">
                    #set($avatarAnonymousCheck = $core_v2_utility.IsMatch($user.AvatarUrl, '.*anonymous\.gif.*'))
                    #if($avatarAnonymousCheck)
                      <span class="glyphicon glyphicon-user"><span class="badge"><i class="glyphicon glyphicon-ok"></i></span></span>
                    #else
	                  $core_v2_ui.GetResizedImageHtml($user.AvatarUrl, 22, 22, "%{ ResizeMethod = 'ZoomAndCrop' }")
                    #end
                    </a>
                  </li>
                  #set($hasLinks = true)
                #else
                  #set($url = $core_v2_urls.Login())
                  #if ($url)
                    <li class="mobile">
                      <a href="$core_v2_encoding.HtmlAttributeEncode($url)" class="internal-link user" title="$core_v2_encoding.HtmlAttributeEncode($core_v2_language.GetResource('JoinSignIn'))">
                          <span class="glyphicon glyphicon-user"></span>
                      </a>
                    </li>
                    #set($hasLinks = true)
                  #end
                #end
                
              #elseif($link == 'Inbox' && $isRegistered)
                #set($url = $core_v2_urls.Conversations())
                #if ($url)
                  #set($conversationsUnread = $core_v2_conversation.UnreadCount())
                  <li class="mobile">
                    <a href="#" class="conversations" id="$core_v2_widget.UniqueId('conversations')">$core_v2_language.GetResource('Conversations_Inbox')</a>
                  </li>
                  #set($hasLinks = true)
                #end
              #end
            #afterall
            #end
				</ul>

				<ul class="utility mobile">
					<li class="dropdown mobile-search-button search-button">
            <a href="#">
              <span class="top-search-icon"><i class="glyphicon glyphicon-search"></i></span>
            </a>
          </li>
          #if ($isRegistered)
            <li>
              <a href="#" class="user logged-in" id="$core_v2_encoding.HtmlAttributeEncode($handheldBannerUserLinksLinkId)">
                  $core_v2_language.GetResource('user')
              </a>
              <a href="#" class="popup-list-count" id="$core_v2_encoding.HtmlAttributeEncode($handheldBannerUserLinksCountId)"></a>
            </li>
          #else
            #set($url = $core_v2_urls.Login())
            #if ($url)
            <li>
              <a href="$core_v2_encoding.HtmlAttributeEncode($url)" class="user">
                <span class="glyphicon glyphicon-user"></span>
              </a>
            </li>
            #end
          #end
					<li class="hamburger">
            <a href="#" class="navbar-toggle" data-toggle="site-menu">
              <span class="glyphicon glyphicon-menu-hamburger"></span>
            </a>
          </li>
				</ul>

				<div class="utility-dropdown mobile" id="$core_v2_encoding.HtmlAttributeEncode($utilityDropdown)">
          <div class="user-links" style="display:none" id="$core_v2_encoding.HtmlAttributeEncode($handheldBannerUserLinksId)">
						<ul class="utility"></ul>
          </div>
        </div>

			</div>
		</div>
	</nav>
</header>

#registerEndOfPageHtml('telligent.evolution.widgets.siteBanner')


	<script type="text/html" id="$core_v2_encoding.HtmlAttributeEncode($notificationPreferenceTemplate)">
		<div class="notification-preference">
			<span class="description">$core_v2_language.GetResource('TurnOffQuestion') <strong><%: notificationTypeName %></strong>$core_v2_language.GetResource('TurnOffQuestionSuffix')</span>
			<a href="#" class="confirm internal-link button submit-button" data-notificationtypeid="<%: notificationTypeId %>">$core_v2_language.GetResource('TurnOff')</a>
			<a href="#" class="cancel internal-link button submit-button">$core_v2_language.GetResource('Cancel')</a>
		</div>
	</script>


	<script type="text/html" id="$core_v2_encoding.HtmlAttributeEncode($listTemplate)">
		<div>
			<div class="multiple-column-list columns-1">
				<div class="multiple-column-item column-1">
					<ul class="content-list content">
					</ul>
					<div class="loading">$core_v2_language.GetResource('loading')</div>
					<% if(footerContent) { %>
						<div class="content-list-footer">
							<%= footerContent %>
						</div>
					<% } %>
				</div>
			</div>
		</div>
	</script>


	<script type="text/html" id="$core_v2_encoding.HtmlAttributeEncode($bookmarkFilterTemplate)">
		<ul class="navigation-list filter">
			<% if(contentTypeIds && contentTypeIds.length > 0) { %>
				<li class="navigation-item conversations">
					<a class="internal-link" href="#" data-contenttypeids="<%: contentTypeIds %>">$core_v2_language.GetResource('Bookmark_Filter_Content')</a>
				</li>
			<% } %>
			<% if(applicationContentTypeIds && applicationContentTypeIds.length > 0) { %>
				<li class="navigation-item conversations">
					<a class="internal-link" href="#" data-contenttypeids="<%: applicationContentTypeIds %>">$core_v2_language.GetResource('Bookmark_Filter_Application')</a>
				</li>
			<% } %>
			<% if(containerTypes && containerTypes.length > 0) { %>
				<% foreach(containerTypes, function(containerType) {  %>
					<li class="navigation-item conversations">
						<a class="internal-link" href="#" data-contenttypeids="<%: containerType.id %>"><%: containerType.name %></a>
					</li>
				<% }); %>
			<% } %>
		</ul>
	</script>

	<script type="text/html" id="$core_v2_encoding.HtmlAttributeEncode($notificationFilterTemplate)">
		<ul class="navigation-list filter">
			<li class="navigation-item all">
				<a class="internal-link" href="#" data-filter="all">$core_v2_language.GetResource('Notification_Filter_All')</a>
			</li>
			<li class="navigation-item unread">
				<a class="internal-link" href="#" data-filter="unread">$core_v2_language.GetResource('Notification_Filter_Unread')</a>
			</li>
		</ul>
	</script>

	<script type="text/html" id="$core_v2_encoding.HtmlAttributeEncode($searchFilterTemplate)">
		<% if(places && places.length > 0) { %>
			<ul class="navigation-list filter">
				<% foreach(places, function(place) { %>
					<li class="navigation-item">
						<a class="place internal-link" href="#" data-key="<%: place.key %>" data-value="<%: place.value %>" data-searchparam="<%: place.searchParameter %>" data-searchvalue="<%: place.searchValue %>"><%= place.name %></a>
				<% }); %>
			</ul>
		<% } %>

		<% if(filters && filters.length > 0) { %>
			<ul class="navigation-list filter">
			<% foreach(filters, function(filter) {  %>
				<li class="navigation-item">
					<a class="type internal-link" href="#" data-key="<%: filter.key %>"><%= filter.name %></a>
				</li>
			<% }); %>
			</ul>
		<% } %>
	</script>

	<script type="text/html" id="$core_v2_encoding.HtmlAttributeEncode($userTemplate)">
		<div class="user">
			<div class="avatar">
				<a href="$core_v2_encoding.HtmlAttributeEncode($user.ProfileUrl)">
					$core_v2_ui.GetResizedImageHtml($user.AvatarUrl, 40, 40, "%{ ResizeMethod = 'ZoomAndCrop' }")
				</a>
			</div>
			<span class="user-name">
				<a href="$core_v2_encoding.HtmlAttributeEncode($user.ProfileUrl)">$core_v2_encoding.JavascriptEncode($user.DisplayName)</a>
			</span>

			#set($authType = false)
			#set($authType = $core_v2_authentication.GetLastLoginType())
			#if ($authType && $authType != '')
				#set($oathProvider = false)
				#set($oathProvider = $core_v2_authentication.GetOAuthProvider($authType))
				#if ($oathProvider)
					<span class="oauth-provider">
						$core_v2_ui.GetResizedImageHtml($oathProvider.IconUrl, 18, 18, "%{ border='0', alt = $oathProvider.ClientName, class = 'ui-tip', ResizeMethod = 'ZoomAndCrop' }")
					</span>
				#end
			#end
		</div>

		#set($hasUserLinks = true)
		#set ($userLinks = $links.Values('Link'))
		#foreach($link in $userLinks)
		#beforeall
			<ul class="navigation-list user">
		#each
			#if($link == 'UserInformation')
				#set($url = false)
				#set($url = $user.ProfileUrl)
				#if ($url)
					<li class="navigation-list-item">
						<a href="$core_v2_encoding.HtmlAttributeEncode($user.ProfileUrl)">$core_v2_language.GetResource('Links_User_Profile')</a>
					</li>
					#set($hasUserLinks = true)
				#end
			#elseif($link == 'Settings')
				#set($url = false)
				#set($url = $core_v2_urls.Settings())
				#if ($url)
					<li class="navigation-list-item">
						<a href="$core_v2_encoding.HtmlAttributeEncode($url)">$core_v2_language.GetResource('Links_User_Settings')</a>
					</li>
					#set($hasUserLinks = true)
				#end
			#elseif($link == 'Invite')
				#set($url = false)
				#set($url = $core_v2_urls.Invite())
				#if ($url)
					<li class="navigation-list-item">
						<a href="$core_v2_encoding.HtmlAttributeEncode($url)">$core_v2_language.GetResource('Links_User_Invite')</a>
					</li>
					#set($hasUserLinks = true)
				#end
			#elseif($link == 'SignOut')
				#set($url = false)
				#set($url = $core_v2_urls.LogOut())
				#if ($url)
					<li class="navigation-list-item logout">
						<a href="$core_v2_encoding.HtmlAttributeEncode($url)" class="internal-link logout">
							#if($isImpersonated)$core_v2_language.GetResource('StopImpersonating')#else$core_v2_language.GetResource('Links_User_Logout')#end
						</a>
					</li>
					#set($hasUserLinks = true)
				#end
			#end
		#afterall
			</ul>
		#end
	</script>


	<script type="text/javascript" src="$core_v2_encoding.HtmlAttributeEncode($core_v2_widget.GetFileUrl('ui.js'))"></script>
#end
#registerEndOfPageHtml()
	<script type="text/javascript">
		#set($DQ = '"')

		#set($conversationListFooterContent = "<a href=${DQ}${core_v2_urls.Conversations()}${DQ} class=${DQ}left${DQ}>$core_v2_language.GetResource('Conversations_More')</a><a href=${DQ}#${DQ} data-messagename=${DQ}widget.${core_v2_widget.WrapperElementId}.startconversation${DQ} class=${DQ}right${DQ}>$core_v2_language.GetResource('Conversation_Send')</a>")


		#set($notificationSettingsUrl = $core_v2_urls.Settings())
		#set($notificationListFooterContent = "<a href=${DQ}#${DQ} class=${DQ}mark-read left${DQ} #if ($notificationsUnread == 0) style=${DQ}display:none${DQ} #end>$core_v2_language.GetResource('Notifications_Mark')</a><a class=${DQ}right${DQ} href=${DQ}${notificationSettingsUrl}${DQ}>$core_v2_language.GetResource('Links_User_Settings')</a>")

		#set($bookmarksUrl = $core_v2_urls.Favorites($core_v2_user.Accessing.Id))
		#set($bookmarksListFooterContent = "<a class=${DQ}left${DQ} href=${DQ}${bookmarksUrl}${DQ}>$core_v2_language.GetResource('Bookmarks_More')</a>")
		## possibly show bookmark/unbookmark link
		#if ($isRegistered && $currentContent && $user && $currentContent.ContentId != $user.ContentId)
			#set ($currentContentBookmark = $core_v2_bookmark.Get($currentContent.ContentId))
			#if ($currentContentBookmark)
				#set ($isBookmarked = true)
			#end
			#set ($currentContentId = $currentContent.ContentId)
			#set ($bookmarkComponent = $core_v2_ui.Bookmark($currentContent.ContentId, $currentContent.ContentTypeId, "%{ CssClass = 'right' }"))
			#set ($bookmarksListFooterContent = "${bookmarksListFooterContent}${bookmarkComponent}")
		#end

		#set($searchListFooterContent = "<a data-messagename=${DQ}widget.${core_v2_widget.WrapperElementId}.advancedsearch${DQ} id=${DQ}$core_v2_widget.UniqueId('advancedsearch')${DQ} href=${DQ}#${DQ}>$core_v2_language.GetResource('Advanced_Search')</a>")

		jQuery(function(){
			jQuery.telligent.evolution.widgets.siteBanner.register({
				wrapper: '#$core_v2_widget.WrapperElementId',

				messagePrefix: 'widget.${core_v2_widget.WrapperElementId}.',
				banner: jQuery('#$core_v2_encoding.JavascriptEncode($bannerId)'),

        useQuestFooter: '$core_v2_encoding.JavascriptEncode($useQuestFooter)',
				handheldSearchFieldsLink: jQuery('#$core_v2_encoding.JavascriptEncode($handheldSearchFieldsLinkId)'),
				handheldSearchFields: jQuery('#$core_v2_encoding.JavascriptEncode($searchFieldsId)'),
				handheldBannerLinksLink: jQuery('#$core_v2_encoding.JavascriptEncode($handheldBannerUserLinksLinkId)'),
				handheldBannerLinks: jQuery('#$core_v2_encoding.JavascriptEncode($handheldBannerUserLinksId)'),
				searchFields: jQuery('#$core_v2_encoding.JavascriptEncode($searchFieldsId)'),

				utilityDropdown: jQuery('#$core_v2_encoding.JavascriptEncode($utilityDropdown)'),

				bannerLinks: jQuery('#$core_v2_encoding.JavascriptEncode($bannerUserLinksId)'),
				handheldBannerLinksCount: jQuery('#$core_v2_encoding.JavascriptEncode($handheldBannerUserLinksCountId)'),
				bannerSiteLinks: jQuery('#$core_v2_encoding.JavascriptEncode($bannerSiteLinksId)'),
				handheldSiteLinksLink: jQuery('#$core_v2_encoding.JavascriptEncode($handheldSiteLinksLinkId)'),
				handheldSiteLinks: jQuery('#$core_v2_encoding.JavascriptEncode($handheldSiteLinksId)'),

				notificationsTemplate: '$core_v2_encoding.JavascriptEncode($listTemplate)',
				notificationsUrl: '$core_v2_encoding.JavascriptEncode($core_v2_widget.GetExecutedFileUrl('notifications.vm'))',
				notificationsLink: jQuery('#$core_v2_widget.UniqueId('notifications')'),
				notificationsUnread: $notificationsUnread,
				notificationListFooterContent: '$core_v2_encoding.JavascriptEncode($notificationListFooterContent)',
				notificationPreferenceTemplate: '$core_v2_encoding.JavascriptEncode($notificationPreferenceTemplate)',
				notificationssUnreadCountMessageSingular: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Notifications_UnreadCountMessageSingular'))',
				notificationssUnreadCountMessagePlural: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Notifications_UnreadCountMessagePlural'))',
				notificationsFilterTemplate: '$core_v2_encoding.JavascriptEncode($notificationFilterTemplate)',

				conversationsTemplate: '$core_v2_encoding.JavascriptEncode($listTemplate)',
				conversationsUrl: '$core_v2_encoding.JavascriptEncode($core_v2_widget.GetExecutedFileUrl('conversations.vm'))',
				conversationsLink: jQuery('#$core_v2_widget.UniqueId('conversations')'),
				conversationsUnread: $conversationsUnread,
				conversationNotificationTypeId: '$core_v2_conversationMessage.NotificationTypeId',
				conversationListFooterContent: '$core_v2_encoding.JavascriptEncode($conversationListFooterContent)',
				conversationsUnreadCountMessageSingular: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Conversations_UnreadCountMessageSingular'))',
				conversationsUnreadCountMessagePlural: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Conversations_UnreadCountMessagePlural'))',
				conversationNewConversationModalUrl: '$core_v2_encoding.JavascriptEncode($core_v2_urls.AddConversation())',

				bookmarksTemplate: '$core_v2_encoding.JavascriptEncode($listTemplate)',
				bookmarksUrl: '$core_v2_encoding.JavascriptEncode($core_v2_widget.GetExecutedFileUrl('bookmarks.vm'))',
				bookmarksLink: jQuery('#$core_v2_widget.UniqueId('bookmarks')'),
				bookmarksListFooterContent: '$core_v2_encoding.JavascriptEncode($bookmarksListFooterContent)',
				bookmarksContentTypes: '$core_v2_encoding.JavascriptEncode($contentTypes)',
				bookmarksApplicationContentTypes: '$core_v2_encoding.JavascriptEncode($applicationContentTypes)',
				bookmarksContainerContentTypes: '$core_v2_encoding.JavascriptEncode($containerContentTypes)',
				bookmarksFilterTemplate: '$core_v2_encoding.JavascriptEncode($bookmarkFilterTemplate)',
				bookmarksIsBookmarked: #if($isBookmarked) true #else false #end,
				bookmarksCurrentContentId: '$currentContentId',
				bookmarksBookmarks: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Bookmarks'))',
				bookmarkAdded: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Bookmark_Added'))',
				bookmarkRemoved: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Bookmark_Removed'))',

				userPopupTemplate: '$core_v2_encoding.JavascriptEncode($listTemplate)',
				userContentTemplate: '$core_v2_encoding.JavascriptEncode($userTemplate)',
				userLink: jQuery('#$core_v2_widget.UniqueId('user')'),

				searchType: '$siteSearch',
				#if ($siteSearch == "Default")
				searchTemplate: '$core_v2_encoding.JavascriptEncode($listTemplate)',
				searchUrl: '$core_v2_encoding.JavascriptEncode($core_v2_widget.GetExecutedFileUrl('search.vm'))',
				searchInput: jQuery('#$core_v2_encoding.JavascriptEncode($searchId)'),
				searchFooterContent: '$core_v2_encoding.JavascriptEncode($searchListFooterContent)',
				searchFilterTemplate: '$core_v2_encoding.JavascriptEncode($searchFilterTemplate)',
				searchAdvancedUrl: '$core_v2_encoding.JavascriptEncode($core_v2_urls.Search("%{ QueryString = '{0}' }"))',
				searchAdvancedUserUrl: '$core_v2_encoding.JavascriptEncode($core_v2_urls.UserList("%{ QueryString = '{0}' }"))',
				searchFilterContentName: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Search_Filter_Content'))',
				searchFilterGroupsName: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Search_Filter_Groups'))',
				searchFilterPeopleName: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Search_Filter_People'))',
				searchPlaceApplicationId: #if ($currentApplication) '$currentApplication.ApplicationId' #else null #end,
				searchPlaceApplicationName: #if ($currentApplication) '$core_v2_encoding.JavascriptEncode($core_v2_language.FormatString($core_v2_language.GetResource('Search_Filter_In'), $currentApplication.HtmlName('')))' #else null #end,
				searchPlaceGroupId: #if ($currentGroup) '$currentGroup.ContainerId' #else null #end,
        searchPlaceGroupLocalId: #if ($currentGroup) '$currentGroup.Id' #else null #end,
				searchPlaceGroupName: #if ($currentGroup) '$core_v2_encoding.JavascriptEncode($core_v2_language.FormatString($core_v2_language.GetResource('Search_Filter_In'), $currentGroup.Name))' #else null #end,
				searchPlaceAnywhereName: '$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('Search_Filter_Anywhere'))',
				advancedSearchId: '$core_v2_widget.UniqueId('advancedsearch')',
				searchShowPeople: #if($core_v2_nodePermission.Get('Site_ReadProfiles').IsAllowed) true#else false#end,
				#else
				searchInput: jQuery('#$core_v2_encoding.JavascriptEncode($searchId)'),
				#end

				siteNavigationType: '$core_v2_encoding.JavascriptEncode($siteNavigationType)'
			});
		});
	</script>
#end]]></contentScript>
		<headerScript><![CDATA[
$core_v2_widget.ApplyTokens($core_v2_widget.GetStringValue('fragmentHeader', '${resource:SiteBanner}'))
			]]></headerScript>
		<configuration><![CDATA[<propertyGroup id="options" resourceName="Options">
	<property id="fragmentHeader" resourceName="CF_Title" dataType="string" defaultValue="${resource:SiteBanner}" controlType="Telligent.Evolution.Controls.ContentFragmentTokenStringControl, Telligent.Evolution.Controls" />
	<property id="siteBrand" dataType="string" resourceName="Site_Brand" descriptionResourceName="Site_Brand_Description" defaultValue="exclude" controlType="Telligent.Evolution.Controls">
		<propertyValue value="dsg" resourceName="Site_Brand_DSG"/>
		<propertyValue value="quest" resourceName="Site_Brand_Quest"/>
	</property>
	<property id="siteSearch" dataType="string" resourceName="Site_Search" descriptionResourceName="Site_Search_Description" defaultValue="Default">
		<propertyValue value="Default" resourceName="Site_Search_Default"/>
		<propertyValue value="Quest" resourceName="Site_Search_Quest"/>
	</property>
	<property id="useQuestFooter" resourceName="CF_Quest_Footer" dataType="bool" defaultValue="false" />
	<property id="links" resourceName="Links" descriptionResourceName="Links_Description" dataType="custom" defaultValue="Link=Notifications&amp;Link=Inbox&amp;Link=Bookmarks&amp;Link=User&amp;Link=Invite&amp;Link=UserInformation&amp;Link=Settings&amp;Link=SignOut" controlType="Telligent.Evolution.Controls.SortableListControl, Telligent.Evolution.Controls" height="275" key="Link" >
		<propertyValue value="Notifications" resourceName="Links_Notifications" />
		<propertyValue value="Inbox" resourceName="Links_Inbox" />
		<propertyValue value="Bookmarks" resourceName="Links_Bookmarks" />
		<propertyValue value="User" resourceName="Links_User" />
		<propertyValue value="Invite" resourceName="Links_User_Invite" />
		<propertyValue value="Settings" resourceName="Links_User_Settings" />
		<propertyValue value="UserInformation" resourceName="Links_User_Profile" />
		<propertyValue value="SignOut" resourceName="Links_User_Logout" />
	</property>
</propertyGroup>
<propertyGroup id="group2" resourceName="NavigationTab">
    <property id="siteNavigation" dataType="string" resourceName="Site_Navigation" descriptionResourceName="Site_Navigation_Description" defaultValue="exclude" controlType="Telligent.Evolution.Controls.PropertyVisibilityValueSelectionControl, Telligent.Evolution.Controls">
		<propertyValue value="exclude" resourceName="Site_Navigation_Exclude" propertiesToHide="navHTML"/>
		<propertyValue value="custom" resourceName="Site_Navigation_Custom" propertiesToShow="navHTML"/>
		<propertyValue value="quest" resourceName="Site_Navigation_Quest" propertiesToHide="navHTML"/>
	</property>
	<property id="navHTML" resourceName="CF_Navigation_Content" dataType="html" controlType="Telligent.Evolution.Controls.HtmlEditorStringControl, Telligent.Evolution.Controls" width="100%" height="250px"/>
</propertyGroup>]]></configuration>
		<languageResources><language key="en-us">
  <resource name="SiteBanner">Site - Banner</resource>
  <resource name="SiteBannerDescription">Provides site-level navigation for users.</resource>
  <resource name="Options">Options</resource>
  <resource name="CF_Title">Widget Title</resource>
  <resource name="Site_Navigation">Site Navigation</resource>
  <resource name="Site_Navigation_Description">Optionally include group browsing or custom navigation alongside search and user links.</resource>
  <resource name="Site_Navigation_Exclude">Exclude</resource>
  <resource name="Site_Navigation_Group">Include Group Navigation</resource>
  <resource name="Site_Navigation_MyGroup">Include Accessing User's Group Navigation</resource>
  <resource name="Site_Navigation_Custom">Include Custom Navigation</resource>
  <resource name="Custom_Navigation">Custom Navigation Items</resource>
  <resource name="Custom_Navigation_Description">Add, edit, delete, and reorder custom navigation items.</resource>
  <resource name="navigation_custom"></resource>
  <resource name="Site_Navigation_Groups_More">All Groups</resource>
  <resource name="GroupInclusion">Include Groups</resource>
  <resource name="Site">Site</resource>
  <resource name="Links">User Links</resource>
  <resource name="Links_Description">Select, rearrange, and enable the links to be displayed</resource>
  <resource name="Links_Notifications">Notifications</resource>
  <resource name="Links_Inbox">Inbox</resource>
  <resource name="Links_Bookmarks">Bookmarks</resource>
  <resource name="Links_User">User</resource>
  <resource name="Links_User_Invite">Invite a member</resource>
  <resource name="Links_User_Settings">Settings</resource>
  <resource name="Links_User_Profile">Profile</resource>
  <resource name="Links_User_Logout">Sign Out</resource>
  <resource name="JoinSignIn">Join or Sign In</resource>
  <resource name="Cancel">Cancel</resource>
  <resource name="Bookmarks">Bookmarks</resource>
  <resource name="Bookmarks_More">View All</resource>
  <resource name="Bookmarks_None">You have no bookmarks.</resource>
  <resource name="Bookmark_Filter_Content">Content</resource>
  <resource name="Bookmark_Filter_Application">Application</resource>
  <resource name="Bookmark_Added">Bookmark Added</resource>
  <resource name="Bookmark_Removed">Bookmark Removed</resource>
  <resource name="Notifications">Notifications</resource>
  <resource name="Notifications_None">No notifications. Go get busy in the community!</resource>
  <resource name="TurnOffNotifications">Turn off</resource>
  <resource name="TurnOff">Confirm</resource>
  <resource name="TurnOffQuestion">Do not notify me when someone</resource>
  <resource name="TurnOffQuestionSuffix">?</resource>
  <resource name="Notifications_UnreadCountMessageSingular">You have {0} unread notification</resource>
  <resource name="Notifications_UnreadCountMessagePlural">You have {0} unread notifications</resource>
  <resource name="Notifications_Mark">Mark as Read</resource>
  <resource name="Notification_Filter_Unread">Unread</resource>
  <resource name="Notification_Filter_All">All</resource>
  <resource name="Conversations_Inbox">Inbox</resource>
  <resource name="Conversations_More">View All</resource>
  <resource name="Conversations_None">You have no messages.</resource>
  <resource name="Conversation_Send">New Message</resource>
  <resource name="Conversations_UnreadCountMessageSingular">You have {0} unread message</resource>
  <resource name="Conversations_UnreadCountMessagePlural">You have {0} unread messages</resource>
  <resource name="user">User</resource>
  <resource name="StopImpersonating">Stop Impersonating</resource>
  <resource name="Search_Filter_In">In {0}</resource>
  <resource name="Search_Filter_Anywhere">Anywhere</resource>
  <resource name="Search_Filter_Content">Content</resource>
  <resource name="Search_Filter_Groups">Groups</resource>
  <resource name="Search_Filter_People">People</resource>
  <resource name="Advanced_Search">Advanced Search</resource>
  <resource name="No_Results">No Results</resource>
  <resource name="Groups_NoGroups">There are no groups created in this site yet.</resource>
  <resource name="Core_SiteUserNavigation_Logo">Logo (optimal image size is 250*88px)</resource>
  <resource name="Core_SiteUserNavigation_Home">Home</resource>
  <resource name="Search">What can we help you find?</resource>
  <resource name="TourTipSearch">Use search within the community to find people, content and groups. You can also use it to help navigate through the community.</resource>
  <resource name="TourTipNavigation">Navigate the community</resource>
  <resource name="TourTipSignIn">Sign in or Join the community.</resource>
  <resource name="TourTipNotifications">View recent notifications.</resource>
  <resource name="TourTipBookmarks">View bookmarks or bookmark the current page.</resource>
  <resource name="TourTipMessages">View your latest conversations.</resource>
  <resource name="TourTipProfile">Update your profile, change your settings or sign out.</resource>
  <resource name="loading">Loading...</resource>
  <resource name="Site_Navigation_Quest">Use Quest Navigation</resource>
  <resource name="Site_Search">Site Search</resource>
  <resource name="Site_Search_Description">Choose search methods</resource>
  <resource name="Site_Search_Default">Default search provided by Telligent</resource>
  <resource name="Site_Search_Quest">Utilize Quest Search</resource>
  <resource name="CF_Quest_Footer">Use Quest Footer</resource>
  <resource name="Site_Brand_Description">Select Brand</resource>
  <resource name="Site_Brand">Brand</resource>
  <resource name="Site_Brand_DSG">Dell Software</resource>
  <resource name="Site_Brand_Quest">Quest Software</resource>
  <resource name="NavigationTab">Navigation</resource>
  <resource name="CF_Navigation_Content">Please enter navigation HTML</resource>
</language></languageResources>
		<additionalCssScript><![CDATA[masthead-container]]></additionalCssScript>
		<files>
			<file name="bookmarks.vm">77u/I3NldCAoJHBhZ2VJbmRleCA9ICRjb3JlX3YyX3V0aWxpdHkuUGFyc2VJbnQoJGNvcmVfdjJfcGFnZS5HZXRRdWVyeVN0cmluZ1ZhbHVlKCd3X3BhZ2VJbmRleCcpKSkNCiNzZXQgKCRjb250ZW50VHlwZUlkcyA9ICRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19jb250ZW50VHlwZUlkcycpKQ0KI2lmICgkY29udGVudFR5cGVJZHMgJiYgJGNvbnRlbnRUeXBlSWRzLkxlbmd0aCA+IDApDQoJI3NldCAoJGJvb2ttYXJrcyA9ICRjb3JlX3YyX2Jvb2ttYXJrLkxpc3QoIiV7IFBhZ2VJbmRleCA9ICRwYWdlSW5kZXgsIFBhZ2VTaXplID0gMTAsIFNvcnRCeSA9ICdEYXRlJywgU29ydE9yZGVyID0gJ0Rlc2NlbmRpbmcnLCBDb250ZW50VHlwZUlkcyA9ICRjb250ZW50VHlwZUlkcyB9IikpDQojZWxzZQ0KCSNzZXQgKCRib29rbWFya3MgPSAkY29yZV92Ml9ib29rbWFyay5MaXN0KCIleyBQYWdlSW5kZXggPSAkcGFnZUluZGV4LCBQYWdlU2l6ZSA9IDEwLCBTb3J0QnkgPSAnRGF0ZScsIFNvcnRPcmRlciA9ICdEZXNjZW5kaW5nJyB9IikpDQojZW5kDQojc2V0ICgkYWNjZXNzaW5nVXNlciA9ICRjb3JlX3YyX3VzZXIuQWNjZXNzaW5nKQ0KDQojc2V0ICgkaGFzTW9yZSA9IGZhbHNlKQ0KI3NldCAoJGN1cnJlbnRQYWdlZFF1YW50aXR5ID0gKCRib29rbWFya3MuUGFnZUluZGV4ICsgMSkgKiAkYm9va21hcmtzLlBhZ2VTaXplKQ0KI2lmICgkYm9va21hcmtzLlRvdGFsQ291bnQgPiAkY3VycmVudFBhZ2VkUXVhbnRpdHkpDQoJI3NldCAoJGhhc01vcmUgPSB0cnVlKQ0KI2VuZA0KDQojc2V0ICgkcm9vdEdyb3VwID0gJGNvcmVfdjJfZ3JvdXAuUm9vdCkNCg0KI2ZvcmVhY2ggKCRib29rbWFyayBpbiAkYm9va21hcmtzKQ0KCSMjIHJlbmRlciBib29rbWFyaw0KCSNzZXQgKCRjb250ZW50ID0gZmFsc2UpDQoJI3NldCAoJGNvbnRlbnQgPSAkYm9va21hcmsuQ29udGVudCkNCgkjaWYgKCRjb250ZW50KQ0KCQkjIyBkZXRlcm1pbmUgYW4gaW1hZ2UgdG8gdXNlLiBQcmVmZXJyaW5nIGNvbnRlbnQgb3ZlciBhcHBsaWNhdGlvbiBvdmVyIGNvbnRhaW5lcg0KCQkjc2V0ICgkaW1hZ2VVcmwgPSBmYWxzZSkNCgkJI3NldCAoJGltYWdlVXJsID0gJGNvbnRlbnQuQXZhdGFyVXJsKQ0KCQkjaWYgKCghJGltYWdlVXJsIHx8ICRpbWFnZVVybCA9PSAnJykgJiYgJGNvbnRlbnQuQXBwbGljYXRpb24pDQoJCQkjc2V0ICgkaW1hZ2VVcmwgPSAkY29udGVudC5BcHBsaWNhdGlvbi5BdmF0YXJVcmwpDQoJCQkjaWYgKCghJGltYWdlVXJsIHx8ICRpbWFnZVVybCA9PSAnJykgJiYgJGNvbnRlbnQuQXBwbGljYXRpb24uQ29udGFpbmVyKQ0KCQkJCSNzZXQgKCRpbWFnZVVybCA9ICRjb250ZW50LkFwcGxpY2F0aW9uLkNvbnRhaW5lci5BdmF0YXJVcmwpDQoJCQkjZW5kDQoJCSNlbmQNCgkJPGxpIGNsYXNzPSJjb250ZW50LWl0ZW0iIGRhdGEtY29udGVudHVybD0iJGNvbnRlbnQuVXJsIiAjaWYoJGhhc01vcmUpIGRhdGEtaGFzbW9yZT0idHJ1ZSIgI2VuZD4NCgkJCSNpZiAoJGltYWdlVXJsKQ0KCQkJCTxkaXYgY2xhc3M9InBvc3QtYXV0aG9yIj4NCgkJCQkJPHNwYW4gY2xhc3M9ImF2YXRhciI+DQoJCQkJCQk8YSBocmVmPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRjb250ZW50LlVybCkiIGNsYXNzPSJpbnRlcm5hbC1saW5rIj4NCgkJCQkJCQkkY29yZV92Ml91aS5HZXRSZXNpemVkSW1hZ2VIdG1sKCRpbWFnZVVybCwgNDAsIDQwLCAiJXtib3JkZXI9JzAnLCBhbHQ9JGNvbnRlbnQuSHRtbE5hbWUoJ1dlYicpLCBSZXNpemVNZXRob2Q9J1pvb21BbmRDcm9wJyxib3JkZXI9JzAnfSIpDQoJCQkJCQk8L2E+DQoJCQkJCTwvc3Bhbj4NCgkJCQk8L2Rpdj4NCgkJCSNlbmQNCgkJCTxkaXYgY2xhc3M9ImNvbnRlbnQiPg0KCQkJCSNzZXQgKCRuYW1lID0gJGNvcmVfdjJfbGFuZ3VhZ2UuVHJ1bmNhdGUoJGNvbnRlbnQuSHRtbE5hbWUoJ1dlYicpLCA1MCwgJ+KApicpKQ0KCQkJCSNpZiAoJG5hbWUubGVuZ3RoID09IDApDQoJCQkJCSNzZXQgKCRuYW1lID0gJGNvcmVfdjJfbGFuZ3VhZ2UuVHJ1bmNhdGUoJGNvbnRlbnQuSHRtbERlc2NyaXB0aW9uKCdXZWInKSwgNTAsICfigKYnKSkNCgkJCQkjZW5kDQoJCQkJJG5hbWUNCgkJCTwvZGl2Pg0KCQkJI2lmICgkY29udGVudCAmJiAkY29udGVudC5BcHBsaWNhdGlvbiAmJiAkY29udGVudC5BcHBsaWNhdGlvbi5Db250YWluZXIgJiYgJGNvbnRlbnQuVXJsICE9ICRjb250ZW50LkFwcGxpY2F0aW9uLkNvbnRhaW5lci5VcmwpDQoJCQkJI2lmICgkcm9vdEdyb3VwLkNvbnRhaW5lcklkICE9ICRjb250ZW50LkFwcGxpY2F0aW9uLkNvbnRhaW5lci5Db250YWluZXJJZCkNCgkJCQkJPHNwYW4gY2xhc3M9ImNvbnRlbnQtZ3JvdXAiPg0KCQkJCQkJPGEgaHJlZj0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkY29udGVudC5BcHBsaWNhdGlvbi5Db250YWluZXIuVXJsKSI+JGNvbnRlbnQuQXBwbGljYXRpb24uQ29udGFpbmVyLkh0bWxOYW1lKCdXZWInKTwvYT4NCgkJCQkJPC9zcGFuPg0KCQkJCSNlbmQNCgkJCSNlbmQNCgkJPC9saT4NCgkjZW5kDQojbm9kYXRhDQoJPGRpdiBjbGFzcz0ibWVzc2FnZSBub3JlY29yZHMiPiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdCb29rbWFya3NfTm9uZScpPC9kaXY+DQojZW5k</file>
			<file name="conversations.vm">77u/I3NldCAoJHBhZ2VJbmRleCA9ICRjb3JlX3YyX3V0aWxpdHkuUGFyc2VJbnQoJGNvcmVfdjJfcGFnZS5HZXRRdWVyeVN0cmluZ1ZhbHVlKCd3X3BhZ2VJbmRleCcpKSkNCiNzZXQgKCRjb252ZXJzYXRpb25zID0gJGNvcmVfdjJfY29udmVyc2F0aW9uLkxpc3QoIiV7IFBhZ2VJbmRleCA9ICRwYWdlSW5kZXgsIFBhZ2VTaXplID0gMTAgfSIpKQ0KI3NldCAoJGFjY2Vzc2luZ1VzZXIgPSAkY29yZV92Ml91c2VyLkFjY2Vzc2luZykNCiNzZXQgKCRtYXhQYXJ0aWNpcGFudEF2YXRhcnMgPSA1KQ0KDQojc2V0ICgkaGFzTW9yZSA9IGZhbHNlKQ0KI3NldCAoJGN1cnJlbnRQYWdlZFF1YW50aXR5ID0gKCRjb252ZXJzYXRpb25zLlBhZ2VJbmRleCArIDEpICogJGNvbnZlcnNhdGlvbnMuUGFnZVNpemUpDQojaWYgKCRjb252ZXJzYXRpb25zLlRvdGFsQ291bnQgPiAkY3VycmVudFBhZ2VkUXVhbnRpdHkpDQoJI3NldCAoJGhhc01vcmUgPSB0cnVlKQ0KI2VuZA0KDQojZm9yZWFjaCAoJGNvbnZlcnNhdGlvbiBpbiAkY29udmVyc2F0aW9ucykNCgkjc2V0ICgkbGFzdE1lc3NhZ2UgPSAkY29udmVyc2F0aW9uLkxhc3RNZXNzYWdlKQ0KDQoJIyMgcmVuZGVyIGNvbnZlcnNhdGlvbg0KCTxsaSBjbGFzcz0iY29udGVudC1pdGVtICNpZighJGNvbnZlcnNhdGlvbi5IYXNSZWFkKSB1bnJlYWQgI2VuZCIgZGF0YS1jb250ZW50dXJsPSIkY29udmVyc2F0aW9uLlVybCIgI2lmKCRoYXNNb3JlKSBkYXRhLWhhc21vcmU9InRydWUiICNlbmQ+DQoJCTxkaXYgY2xhc3M9InBvc3QtYXV0aG9yIj4NCgkJCTxzcGFuIGNsYXNzPSJhdmF0YXIiPg0KCQkJCTxhIGhyZWY9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGxhc3RNZXNzYWdlLkF1dGhvci5VcmwpIiBjbGFzcz0iaW50ZXJuYWwtbGluayI+DQoJCQkJCSRjb3JlX3YyX3VpLkdldFJlc2l6ZWRJbWFnZUh0bWwoJGxhc3RNZXNzYWdlLkF1dGhvci5BdmF0YXJVcmwsIDQwLCA0MCwgIiV7Ym9yZGVyPScwJywgYWx0PSRjb250ZW50Lkh0bWxOYW1lKCdXZWInKSwgUmVzaXplTWV0aG9kPSdab29tQW5kQ3JvcCcsYm9yZGVyPScwJ30iKQ0KCQkJCTwvYT4NCgkJCTwvc3Bhbj4NCgkJPC9kaXY+DQoJCTxkaXYgY2xhc3M9InBvc3QtYXV0aG9ycyI+DQoJCQkjc2V0ICgkRFEgPSAnIicpDQoJCQkjc2V0ICgkYXV0aG9ycyA9ICIiKQ0KCQkJI2ZvcmVhY2ggKCRwYXJ0aWNpcGFudCBpbiAkY29udmVyc2F0aW9uLlBhcnRpY2lwYW50cykNCgkJCQkjc2V0ICgkYXV0aG9ycyA9ICIkYXV0aG9yczxhIGNsYXNzPSR7RFF9aW50ZXJuYWwtbGluayB2aWV3LXVzZXItcHJvZmlsZSR7RFF9IGhyZWY9JHtEUX0kY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRwYXJ0aWNpcGFudC5Qcm9maWxlVXJsKSR7RFF9PiRwYXJ0aWNpcGFudC5EaXNwbGF5TmFtZTwvYT4iKQ0KCQkJI2JldHdlZW4NCgkJCQkjc2V0ICgkYXV0aG9ycyA9ICIkYXV0aG9ycywgIikNCgkJCSNlbmQNCgkJCSRhdXRob3JzDQoJCTwvZGl2Pg0KCQk8ZGl2IGNsYXNzPSJjb250ZW50Ij4NCgkJCSNzZXQgKCRleGNlcnB0ID0gJGNvcmVfdjJfbGFuZ3VhZ2UuVHJ1bmNhdGUoJGxhc3RNZXNzYWdlLkh0bWxEZXNjcmlwdGlvbignV2ViJyksIDUwLCAn4oCmJykpDQoJCQkjaWYgKCRleGNlcnB0Lmxlbmd0aCA9PSAwKQ0KCQkJCSNzZXQgKCRleGNlcnB0ID0gJGNvcmVfdjJfbGFuZ3VhZ2UuVHJ1bmNhdGUoJGNvbnZlcnNhdGlvbi5GaXJzdE1lc3NhZ2UuU3ViamVjdCwgNTAsICfigKYnKSkNCgkJCSNlbmQNCgkJCSRleGNlcnB0DQoJCTwvZGl2Pg0KCQk8ZGl2IGNsYXNzPSJwb3N0LWRhdGUiPg0KCQkJPHNwYW4gY2xhc3M9InZhbHVlIj4kY29yZV92Ml9sYW5ndWFnZS5Gb3JtYXRBZ29EYXRlKCRjb252ZXJzYXRpb24uTGFzdE1lc3NhZ2UuQ3JlYXRlZERhdGUpPC9zcGFuPg0KCQk8L2Rpdj4NCgk8L2xpPg0KI25vZGF0YQ0KCTxkaXYgY2xhc3M9Im1lc3NhZ2Ugbm9yZWNvcmRzIj4kY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnQ29udmVyc2F0aW9uc19Ob25lJyk8L2Rpdj4NCiNlbmQ=</file>
			<file name="notifications.vm">77u/I3NldCAoJGZpbHRlciA9ICRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19maWx0ZXInKSkNCiNzZXQgKCRwYWdlSW5kZXggPSAkY29yZV92Ml91dGlsaXR5LlBhcnNlSW50KCRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19wYWdlSW5kZXgnKSkpDQojc2V0ICgkcGFnZVNpemUgPSAxMCkNCg0KI3NldCAoJG9wdGlvbnMgPSAiJXsgUGFnZUluZGV4ID0gJHBhZ2VJbmRleCwgUGFnZVNpemUgPSAkcGFnZVNpemUgfSIpDQojc2V0ICgkY29udmVyc2F0aW9uTWVzc2FnZU5vdGlmaWNhdGlvbkZpbHRlck5hbWUgPSAiX0ZpbHRlcnNfJHtjb3JlX3YyX2NvbnZlcnNhdGlvbk1lc3NhZ2UuTm90aWZpY2F0aW9uVHlwZUlkfSIpDQokb3B0aW9ucy5BZGQoJGNvbnZlcnNhdGlvbk1lc3NhZ2VOb3RpZmljYXRpb25GaWx0ZXJOYW1lLCAnRXhjbHVkZScpDQojaWYgKCRmaWx0ZXIgPT0gJ3VucmVhZCcpDQoJJG9wdGlvbnMuQWRkKCdJc1JlYWQnLCAnZmFsc2UnKQ0KI2VuZA0KI3NldCAoJG5vdGlmaWNhdGlvbnMgPSAkY29yZV92Ml9ub3RpZmljYXRpb24uTGlzdCgkb3B0aW9ucykpDQoNCiNzZXQgKCRoYXNNb3JlID0gZmFsc2UpDQojc2V0ICgkY3VycmVudFBhZ2VkUXVhbnRpdHkgPSAoJG5vdGlmaWNhdGlvbnMuUGFnZUluZGV4ICsgMSkgKiAkbm90aWZpY2F0aW9ucy5QYWdlU2l6ZSkNCiNpZiAoJG5vdGlmaWNhdGlvbnMuVG90YWxDb3VudCA+ICRjdXJyZW50UGFnZWRRdWFudGl0eSkNCgkjc2V0ICgkaGFzTW9yZSA9IHRydWUpDQojZW5kDQoNCiNmb3JlYWNoICgkbm90aWZpY2F0aW9uIGluICRub3RpZmljYXRpb25zKQ0KCSNzZXQgKCRsYXN0QWN0b3IgPSBmYWxzZSkNCgkjc2V0ICgkYWN0b3JzID0gJG5vdGlmaWNhdGlvbi5BY3RvcnMpDQoJI3NldCAoJGxhc3RJbmRleCA9ICRhY3RvcnMuQ291bnQgLSAxKQ0KCSNzZXQgKCRsYXN0QWN0b3IgPSAkYWN0b3JzLlRvQXJyYXkoKS5nZXQoJGxhc3RJbmRleCkuVXNlcikNCgkjc2V0ICgkbm90aWZpY2F0aW9uVHlwZSA9ICRjb3JlX3YyX25vdGlmaWNhdGlvblR5cGUuR2V0KCRub3RpZmljYXRpb24uTm90aWZpY2F0aW9uVHlwZUlkKSkNCg0KCSNpZiAoJG5vdGlmaWNhdGlvblR5cGUuTm90aWZpY2F0aW9uVHlwZUlkID09ICRjb3JlX3YyX3JhdGVkSXRlbS5Ob3RpZmljYXRpb25UeXBlSWQpDQoJCSNzZXQgKCRsYXN0QWN0b3IgPSBmYWxzZSkNCgkjZW5kDQoNCgkjIyByZW5kZXIgbm90aWZpY2F0aW9uDQoJI3NldCAoJG5vdGlmaWNhdGlvbk1lc3NhZ2UgPSBmYWxzZSkNCgkjc2V0ICgkbm90aWZpY2F0aW9uTWVzc2FnZSA9ICRub3RpZmljYXRpb24uTWVzc2FnZSgnSHRtbCcpKQ0KCSNpZiAoJG5vdGlmaWNhdGlvbk1lc3NhZ2UpDQoJCTxsaSBjbGFzcz0iY29udGVudC1pdGVtICNpZighJG5vdGlmaWNhdGlvbi5Jc1JlYWQpIHVucmVhZCAjZW5kICNpZiAoISRsYXN0QWN0b3IpIG5vLWF1dGhvciAjZW5kIiBkYXRhLWNvbnRlbnR1cmw9IiRub3RpZmljYXRpb24uVGFyZ2V0VXJsIg0KCQkJZGF0YS1ub3RpZmljYXRpb25pZD0iJG5vdGlmaWNhdGlvbi5Ob3RpZmljYXRpb25JZCINCgkJCWRhdGEtbm90aWZpY2F0aW9udHlwZWlkPSIkbm90aWZpY2F0aW9uLk5vdGlmaWNhdGlvblR5cGVJZCINCgkJCWRhdGEtbm90aWZpY2F0aW9udHlwZW5hbWU9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJG5vdGlmaWNhdGlvblR5cGUuRGVzY3JpcHRpb24pIg0KCQkJI2lmKCRoYXNNb3JlKSBkYXRhLWhhc21vcmU9InRydWUiICNlbmQ+DQoNCgkJCSNpZiAoJGxhc3RBY3RvcikNCgkJCQk8ZGl2IGNsYXNzPSJwb3N0LWF1dGhvciI+DQoJCQkJCTxzcGFuIGNsYXNzPSJhdmF0YXIiPg0KCQkJCQkJI2lmICgkbGFzdEFjdG9yLlByb2ZpbGVVcmwpDQoJCQkJCQkJPGEgaHJlZj0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkbGFzdEFjdG9yLlByb2ZpbGVVcmwpIiBjbGFzcz0iaW50ZXJuYWwtbGluayB2aWV3LXVzZXItcHJvZmlsZSI+DQoJCQkJCQkJCSRjb3JlX3YyX3VpLkdldFJlc2l6ZWRJbWFnZUh0bWwoJGxhc3RBY3Rvci5BdmF0YXJVcmwsIDQwLCA0MCwgIiV7Ym9yZGVyPScwJywgYWx0PSRsYXN0QWN0b3IuRGlzcGxheU5hbWUsIFJlc2l6ZU1ldGhvZD0nWm9vbUFuZENyb3AnLGJvcmRlcj0nMCd9IikNCgkJCQkJCQk8L2E+DQoJCQkJCQkjZWxzZQ0KCQkJCQkJCSRjb3JlX3YyX3VpLkdldFJlc2l6ZWRJbWFnZUh0bWwoJGxhc3RBY3Rvci5BdmF0YXJVcmwsIDQwLCA0MCwgIiV7Ym9yZGVyPScwJywgYWx0PSRsYXN0QWN0b3IuRGlzcGxheU5hbWUsIFJlc2l6ZU1ldGhvZD0nWm9vbUFuZENyb3AnLGJvcmRlcj0nMCd9IikNCgkJCQkJCSNlbmQNCgkJCQkJPC9zcGFuPg0KCQkJCQk8c3BhbiBjbGFzcz0idXNlci1uYW1lIj4NCgkJCQkJCSNpZiAoJGxhc3RBY3Rvci5Qcm9maWxlVXJsKQ0KCQkJCQkJCTxhIGhyZWY9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGxhc3RBY3Rvci5Qcm9maWxlVXJsKSIgY2xhc3M9ImludGVybmFsLWxpbmsgdmlldy11c2VyLXByb2ZpbGUiPg0KCQkJCQkJCQkkbGFzdEFjdG9yLkRpc3BsYXlOYW1lDQoJCQkJCQkJPC9hPg0KCQkJCQkJI2Vsc2UNCgkJCQkJCQkkbGFzdEFjdG9yLkRpc3BsYXlOYW1lDQoJCQkJCQkjZW5kDQoJCQkJCTwvc3Bhbj4NCgkJCQk8L2Rpdj4NCgkJCSNlbmQNCgkJCTxkaXYgY2xhc3M9ImNvbnRlbnQiPg0KCQkJCSRub3RpZmljYXRpb25NZXNzYWdlDQoJCQk8L2Rpdj4NCgkJCTxkaXYgY2xhc3M9InBvc3QtZGF0ZSI+DQoJCQkJPHNwYW4gY2xhc3M9InZhbHVlIj4kY29yZV92Ml9sYW5ndWFnZS5Gb3JtYXRBZ29EYXRlKCRub3RpZmljYXRpb24uTGFzdFVwZGF0ZWREYXRlKTwvc3Bhbj4NCgkJCTwvZGl2Pg0KCQkJPGRpdiBjbGFzcz0icHJlZmVyZW5jZSI+DQoJCQkJPGEgaHJlZj0iIyIgdGl0bGU9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ1R1cm5PZmZOb3RpZmljYXRpb25zJykpIiBjbGFzcz0idWktdGlwIj5YPC9hPg0KCQkJPC9kaXY+DQoJCQkjaWYoISRub3RpZmljYXRpb24uSXNSZWFkKQ0KCQkJCTxkaXYgY2xhc3M9Im1hcmsiPg0KCQkJCQk8YSBocmVmPSIjIiB0aXRsZT0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnTm90aWZpY2F0aW9uc19NYXJrJykpIiBjbGFzcz0idWktdGlwIiBkYXRhLW1lc3NhZ2VuYW1lPSJ0ZWxsaWdlbnQuZXZvbHV0aW9uLndpZGdldHMudGhyZWFkLmhpZGVhdHRhY2htZW50Ij5PPC9hPg0KCQkJCTwvZGl2Pg0KCQkJI2VuZA0KCQk8L2xpPg0KCSNlbmQNCiNub2RhdGENCgk8ZGl2IGNsYXNzPSJtZXNzYWdlIG5vcmVjb3JkcyI+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ05vdGlmaWNhdGlvbnNfTm9uZScpPC9kaXY+DQojZW5kDQo=</file>
			<file name="search.vm">77u/I3NldCAoJHF1ZXJ5ID0gJGNvcmVfdjJfdXRpbGl0eS5UcmltKCRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19xdWVyeScpKSkNCiNzZXQgKCRwYWdlU2l6ZSA9IDEwKQ0KI3NldCAoJHBhZ2VJbmRleCA9ICRjb3JlX3YyX3V0aWxpdHkuUGFyc2VJbnQoJGNvcmVfdjJfcGFnZS5HZXRRdWVyeVN0cmluZ1ZhbHVlKCd3X3BhZ2VJbmRleCcpKSkNCiNzZXQgKCRwbGFjZUtleSA9ICRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19wbGFjZUtleScpKQ0KI3NldCAoJHBsYWNlVmFsdWUgPSAkY29yZV92Ml9wYWdlLkdldFF1ZXJ5U3RyaW5nVmFsdWUoJ3dfcGxhY2VWYWx1ZScpKQ0KI3NldCAoJHR5cGUgPSAkY29yZV92Ml9wYWdlLkdldFF1ZXJ5U3RyaW5nVmFsdWUoJ3dfdHlwZScpKQ0KDQojc2V0ICgkc2VhcmNoUXVlcnkgPSAiJXt9IikNCiRzZWFyY2hRdWVyeS5BZGQoIlF1ZXJ5IiwgJHF1ZXJ5KQ0KJHNlYXJjaFF1ZXJ5LkFkZCgiUGFnZVNpemUiLCAkcGFnZVNpemUpDQokc2VhcmNoUXVlcnkuQWRkKCJQYWdlSW5kZXgiLCAkcGFnZUluZGV4KQ0KJHNlYXJjaFF1ZXJ5LkFkZCgnQ29sbGFwc2UnLCAnVHJ1ZScpDQoNCiNpZiAoJHBsYWNlS2V5ID09ICdhcHBsaWNhdGlvbicpDQoJJHNlYXJjaFF1ZXJ5LkFkZCgiQXBwbGljYXRpb25JZCIsICRwbGFjZVZhbHVlKQ0KI2Vsc2VpZiAoJHBsYWNlS2V5ID09ICdncm91cCcgJiYgJHR5cGUgIT0gJ2dyb3VwcycpDQoJJHNlYXJjaFF1ZXJ5LkFkZCgiQ29udGFpbmVySWQiLCAkcGxhY2VWYWx1ZSkNCiNlbmQNCg0KI2lmICgkdHlwZSA9PSAnZ3JvdXBzJykNCgkjaWYgKCRwbGFjZUtleSA9PSAnZ3JvdXAnKQ0KCQkjc2V0KCRwYXJlbnRHcm91cEZpbHRlciA9ICcnKQ0KCQkjc2V0KCRncm91cCA9ICRjb3JlX3YyX2dyb3VwLkdldCgkY29yZV92Ml91dGlsaXR5LlBhcnNlR3VpZCgkcGxhY2VWYWx1ZSkpKQ0KCQkjaWYgKCRncm91cCkNCgkJCSNzZXQoJHBhcmVudEdyb3VwRmlsdGVyID0gInx8cGFyZW50Z3JvdXA6OiR7Z3JvdXAuSWR9IikNCgkJI2VuZA0KCQkkc2VhcmNoUXVlcnkuQWRkKCdGaWx0ZXJzJywgImNvbnRlbnR0eXBlaWQ6OiR7Y29yZV92Ml9ncm91cC5Db250ZW50VHlwZUlkfSR7cGFyZW50R3JvdXBGaWx0ZXJ9IikNCgkjZWxzZQ0KCQkkc2VhcmNoUXVlcnkuQWRkKCdGaWx0ZXJzJywgImNvbnRlbnR0eXBlaWQ6OiRjb3JlX3YyX2dyb3VwLkNvbnRlbnRUeXBlSWQiKQ0KCSNlbmQNCiNlbHNlaWYgKCR0eXBlID09ICd1c2VycycpDQoJJHNlYXJjaFF1ZXJ5LkFkZCgnRmlsdGVycycsICJjb250ZW50dHlwZWlkOjokY29yZV92Ml91c2VyLkNvbnRlbnRUeXBlSWQiKQ0KI2Vsc2UNCgkjc2V0KCRmaWx0ZXJzID0gJycpDQoJI2ZvcmVhY2goJGNvbnRlbnRUeXBlIGluICRjb3JlX3YyX2NvbnRlbnRUeXBlLkxpc3QoKSkNCgkJI3NldCgkYXBwbGljYXRpb25UeXBlID0gZmFsc2UpDQoJCSNzZXQoJGFwcGxpY2F0aW9uVHlwZSA9ICRjb3JlX3YyX2FwcGxpY2F0aW9uVHlwZS5HZXQoJGNvbnRlbnRUeXBlLklkKSkNCgkJI3NldCgkY29udGFpbmVyVHlwZSA9IGZhbHNlKQ0KCQkjc2V0KCRjb250YWluZXJUeXBlID0gJGNvcmVfdjJfY29udGFpbmVyVHlwZS5HZXQoJGNvbnRlbnRUeXBlLklkKSkNCgkJI2lmICgoISRhcHBsaWNhdGlvblR5cGUgfHwgJGFwcGxpY2F0aW9uVHlwZS5IYXNFcnJvcnMoKSkgJiYgKCEkY29udGFpbmVyVHlwZSB8fCAkY29udGFpbmVyVHlwZS5IYXNFcnJvcnMoKSkpDQoJCQkjaWYgKCRmaWx0ZXJzLkxlbmd0aCA9PSAwKQ0KCQkJCSNzZXQoJGZpbHRlcnMgPSAiY29udGVudHR5cGVpZDo6KCR7Y29udGVudFR5cGUuSWR9IikNCgkJCSNlbHNlDQoJCQkJI3NldCgkZmlsdGVycyA9ICIke2ZpbHRlcnN9IE9SICR7Y29udGVudFR5cGUuSWR9IikNCgkJI2VuZA0KCQkjZW5kDQoJI2VuZA0KCSNpZigkZmlsdGVycy5MZW5ndGggPiAwKQ0KCQkkc2VhcmNoUXVlcnkuQWRkKCdGaWx0ZXJzJywgIiR7ZmlsdGVyc30pIikNCgkjZW5kDQojZW5kDQoNCg0KI3NldCAoJHNlYXJjaFJlc3VsdHMgPSAkY29yZV92Ml9zZWFyY2hSZXN1bHQuTGlzdCgkc2VhcmNoUXVlcnkpKQ0KDQojc2V0ICgkaGFzTW9yZSA9IGZhbHNlKQ0KI3NldCAoJGN1cnJlbnRQYWdlZFF1YW50aXR5ID0gKCRzZWFyY2hSZXN1bHRzLlBhZ2VJbmRleCArIDEpICogJHNlYXJjaFJlc3VsdHMuUGFnZVNpemUpDQojaWYgKCRzZWFyY2hSZXN1bHRzLlRvdGFsQ291bnQgPiAkY3VycmVudFBhZ2VkUXVhbnRpdHkpDQogICAgI3NldCAoJGhhc01vcmUgPSB0cnVlKQ0KI2VuZA0KDQojZm9yZWFjaCAoJHNlYXJjaFJlc3VsdCBpbiAkc2VhcmNoUmVzdWx0cykNCgk8bGkgY2xhc3M9ImNvbnRlbnQtaXRlbSIgZGF0YS1jb250ZW50dXJsPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRzZWFyY2hSZXN1bHQuVXJsKSIgI2lmKCRoYXNNb3JlKSBkYXRhLWhhc21vcmU9InRydWUiICNlbmQ+DQoJCSNzZXQgKCRyZXN1bHRIdG1sID0gZmFsc2UpDQoJCSNzZXQgKCRyZXN1bHRIdG1sID0gJHNlYXJjaFJlc3VsdC5WaWV3SHRtbCgpKQ0KCQkjaWYgKCRyZXN1bHRIdG1sKQ0KCQkJJHJlc3VsdEh0bWwNCgkJI2VuZA0KCTwvbGk+DQojbm9kYXRhDQoJPGRpdiBjbGFzcz0ibWVzc2FnZSBub3JlY29yZHMiPiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdOb19SZXN1bHRzJyk8L2Rpdj4NCiNlbmQNCg==</file>
			<file name="ui.js"></file>
		</files>
	</scriptedContentFragment>
</scriptedContentFragments>