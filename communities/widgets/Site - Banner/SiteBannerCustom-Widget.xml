<scriptedContentFragments>
	<scriptedContentFragment name="${resource:SiteBanner}" version="9.2.0.1667" description="${resource:SiteBannerDescription}" instanceIdentifier="c9932b3229d8453892c87cef53db657e" theme="" isCacheable="true" varyCacheByUser="true" showHeaderByDefault="false" cssClass="site-banner">
		<contentScript><![CDATA[#set ($siteVersion = $core_v2_widget.GetCustomValue('siteVersion', 'v1'))

#if ($siteVerson == "v1")
    $core_v2_ui.PagedContent('navigation-v1.vm')
#elseif ($siteVersion == "v2")
    $core_v2_ui.PagedContent('navigation-v2.vm')
#end]]></contentScript>
		<headerScript><![CDATA[
$core_v2_widget.ApplyTokens($core_v2_widget.GetStringValue('fragmentHeader', '${resource:SiteBanner}'))
			]]></headerScript>
		<configuration><![CDATA[<propertyGroup id="version" resourceName="VersionTab">
    <property id="siteVersion" dataType="string" resourceName="Site_Version" defaultValue="v1" controlType="Telligent.Evolution.Controls.PropertyVisibilityValueSelectionControl, Telligent.Evolution.Controls">
		<propertyValue value="v1" resourceName="Site_Version_V1" propertiesToHide="useTLDFooter,navHTML,siteBrand,siteSearch,useQuestFooter,siteNavigation2" propertiesToShow="logo,siteNavigation"/>
		<propertyValue value="v2" resourceName="Site_Version_V2" propertiesToHide="logo,siteNavigation,groupSelectionCustom,navigation" propertiesToShow="useTLDFooter,siteBrand,siteSearch,useQuestFooter,siteNavigation2"/>
	</property>
</propertyGroup>
<propertyGroup id="optionsV1" resourceName="Options">
	<!-- Version 1 -->
	<property id="logo" dataType="url" defaultValue="~/cfs-file.ashx/__key/widgetcontainerfiles/3fc3f82483d14ec485ef92e206116d49-s-AAAAAAAAAAAAAAAAAAAAAA-header-header/logo.png" resourceName="Core_SiteUserNavigation_Logo" controlType="Telligent.Evolution.Controls.ThemeFileUrlControl, Telligent.Evolution.Controls">
		<propertyRule type="Telligent.Evolution.Controls.PropertyRules.FileExtensionRule, Telligent.Evolution.Controls" validExtensions="gif,jpg,jpeg,png" />
	</property>
	
	<!-- Version 2 -->
	<property id="siteBrand" dataType="string" resourceName="Site_Brand" defaultValue="exclude" controlType="Telligent.Evolution.Controls">
		<propertyValue value="dsg" resourceName="Dell_Software"/>
		<propertyValue value="quest" resourceName="Quest_Software"/>
	</property>
	<property id="siteSearch" dataType="string" resourceName="Site_Search" defaultValue="Default">
		<propertyValue value="Default" resourceName="Site_Search_Default"/>
		<propertyValue value="Root" resourceName="Site_Search_Root"/>
	</property>
	<property id="useRootFooter" resourceName="CF_Root_Footer" dataType="bool" defaultValue="false" />
</propertyGroup>
<propertyGroup id="links-tab" resourceName="LinksTab">
    <property id="links" resourceName="Links" descriptionResourceName="Links_Description" dataType="custom" defaultValue="Link=Notifications&amp;Link=Inbox&amp;Link=Bookmarks&amp;Link=User&amp;Link=Invite&amp;Link=UserInformation&amp;Link=Settings&amp;Link=SignOut" controlType="Telligent.Evolution.Controls.SortableListControl, Telligent.Evolution.Controls" height="275" key="Link" >
		<propertyValue value="Notifications" resourceName="Links_Notifications" />
		<propertyValue value="Inbox" resourceName="Links_Inbox" />
		<propertyValue value="Bookmarks" resourceName="Links_Bookmarks" />
		<propertyValue value="User" resourceName="Links_User" />
		<propertyValue value="Invite" resourceName="Links_User_Invite" />
		<propertyValue value="Settings" resourceName="Links_User_Settings" />
		<propertyValue value="UserInformation" resourceName="Links_User_Profile" />
		<propertyValue value="SignOut" resourceName="Links_User_Logout" />
	</property>
</propertyGroup>
<propertyGroup id="navigation-tab" resourceName="NavigationTab">
    <!-- Version 1 -->
    <property id="siteNavigation" dataType="string" resourceName="Site_Navigation" descriptionResourceName="Site_Navigation_Description" defaultValue="exclude" controlType="Telligent.Evolution.Controls.PropertyVisibilityValueSelectionControl, Telligent.Evolution.Controls">
		<propertyValue value="exclude" resourceName="Site_Navigation_Exclude" propertiesToHide="navigation"/>
		<propertyValue value="group" resourceName="Site_Navigation_Group" propertiesToHide="navigation"/>
		<propertyValue value="my_groups" resourceName="Site_Navigation_MyGroup" propertiesToHide="navigation"/>
		<propertyValue value="custom" resourceName="Site_Navigation_Custom" propertiesToShow="navigation"/>
	</property>
    <property id="groupSelectionCustom" resourceName="GroupInclusion" controlType="Telligent.Evolution.Controls.GroupSortableListControl, Telligent.Evolution.Controls" dataType="custom" key="group" sortPropertyId="siteNavigation" sortPropertyOn="group" />
	<property id="navigation" dataType="custom" controlType="Telligent.Evolution.Controls.CustomNavigationCustomControl, Telligent.Evolution.Controls" maximumDepth="1" resourceName="Custom_Navigation" descriptionResourceName="Custom_Navigation_Description" navigationType="site" />
	
	<!-- Version 2 -->
    <property id="siteNavigation2" dataType="string" resourceName="Site_Navigation" descriptionResourceName="Site_Navigation_Description" defaultValue="exclude" controlType="Telligent.Evolution.Controls.PropertyVisibilityValueSelectionControl, Telligent.Evolution.Controls">
		<propertyValue value="exclude" resourceName="Site_Navigation_Exclude" propertiesToHide="navHTML"/>
		<propertyValue value="custom" resourceName="Site_Navigation_Custom" propertiesToShow="navHTML"/>
		<propertyValue value="root" resourceName="Site_Navigation_Root" propertiesToHide="navHTML"/>
	</property>
	<property id="navHTML" resourceName="CF_Navigation_Content" dataType="html" controlType="Telligent.Evolution.Controls.HtmlEditorStringControl, Telligent.Evolution.Controls" width="100%" height="250px"/>
</propertyGroup>]]></configuration>
		<languageResources><language key="en-us">
  <resource name="SiteBanner">Site - Banner</resource>
  <resource name="SiteBannerDescription">Provides site-level navigation for users.</resource>
  <resource name="Options">Options</resource>
  <resource name="CF_Title">Widget Title</resource>
  <resource name="Site_Navigation">Site Navigation</resource>
  <resource name="Site_Navigation_Description">Optionally include group browsing or custom navigation alongside search and user links.</resource>
  <resource name="Site_Navigation_Exclude">Exclude</resource>
  <resource name="Site_Navigation_Group">Include Group Navigation</resource>
  <resource name="Site_Navigation_MyGroup">Include Accessing User's Group Navigation</resource>
  <resource name="Site_Navigation_Custom">Include Custom Navigation</resource>
  <resource name="Custom_Navigation">Custom Navigation Items</resource>
  <resource name="Custom_Navigation_Description">Add, edit, delete, and reorder custom navigation items.</resource>
  <resource name="navigation_groups">Groups</resource>
  <resource name="navigation_my_groups">Your Groups</resource>
  <resource name="navigation_custom"></resource>
  <resource name="Site_Navigation_Groups_More">All Groups</resource>
  <resource name="GroupInclusion">Include Groups</resource>
  <resource name="Site">Site</resource>
  <resource name="Links">User Links</resource>
  <resource name="Links_Description">Select, rearrange, and enable the links to be displayed</resource>
  <resource name="Links_Notifications">Notifications</resource>
  <resource name="Links_Inbox">Inbox</resource>
  <resource name="Links_Bookmarks">Bookmarks</resource>
  <resource name="Links_User">User</resource>
  <resource name="Links_User_Invite">Invite a member</resource>
  <resource name="Links_User_Settings">Settings</resource>
  <resource name="Links_User_Profile">Profile</resource>
  <resource name="Links_User_Logout">Sign Out</resource>
  <resource name="JoinSignIn">Join or Sign In</resource>
  <resource name="Cancel">Cancel</resource>
  <resource name="Bookmarks">Bookmarks</resource>
  <resource name="Bookmarks_More">View All</resource>
  <resource name="Bookmarks_None">You have no bookmarks.</resource>
  <resource name="Bookmark_Filter_Content">Content</resource>
  <resource name="Bookmark_Filter_Application">Application</resource>
  <resource name="Bookmark_Added">Bookmark Added</resource>
  <resource name="Bookmark_Removed">Bookmark Removed</resource>
  <resource name="Notifications">Notifications</resource>
  <resource name="Notifications_None">No notifications. Go get busy in the community!</resource>
  <resource name="TurnOffNotifications">Turn off</resource>
  <resource name="TurnOff">Confirm</resource>
  <resource name="TurnOffQuestion">Do not notify me when someone</resource>
  <resource name="TurnOffQuestionSuffix">?</resource>
  <resource name="Notifications_UnreadCountMessageSingular">You have {0} unread notification</resource>
  <resource name="Notifications_UnreadCountMessagePlural">You have {0} unread notifications</resource>
  <resource name="Notifications_Mark">Mark as Read</resource>
  <resource name="Notification_Filter_Unread">Unread</resource>
  <resource name="Notification_Filter_All">All</resource>
  <resource name="Conversations_Inbox">Inbox</resource>
  <resource name="Conversations_More">View All</resource>
  <resource name="Conversations_None">You have no messages.</resource>
  <resource name="Conversation_Send">New Message</resource>
  <resource name="Conversations_UnreadCountMessageSingular">You have {0} unread message</resource>
  <resource name="Conversations_UnreadCountMessagePlural">You have {0} unread messages</resource>
  <resource name="user">User</resource>
  <resource name="StopImpersonating">Stop Impersonating</resource>
  <resource name="Search_Filter_In">In {0}</resource>
  <resource name="Search_Filter_Anywhere">Anywhere</resource>
  <resource name="Search_Filter_Content">Content</resource>
  <resource name="Search_Filter_Groups">Groups</resource>
  <resource name="Search_Filter_People">People</resource>
  <resource name="Advanced_Search">Advanced Search</resource>
  <resource name="No_Results">No Results</resource>
  <resource name="Groups_NoGroups">There are no groups created in this site yet.</resource>
  <resource name="Core_SiteUserNavigation_Logo">Logo (optimal image size is 250*88px)</resource>
  <resource name="Core_SiteUserNavigation_Home">Home</resource>
  <resource name="Search">Search</resource>
  <resource name="TourTipSearch">Use search within the community to find people, content and groups. You can also use it to help navigate through the community.</resource>
  <resource name="TourTipNavigation">Navigate the community</resource>
  <resource name="TourTipSignIn">Sign in or Join the community.</resource>
  <resource name="TourTipNotifications">View recent notifications.</resource>
  <resource name="TourTipBookmarks">View bookmarks or bookmark the current page.</resource>
  <resource name="TourTipMessages">View your latest conversations.</resource>
  <resource name="TourTipProfile">Update your profile, change your settings or sign out.</resource>
  <resource name="loading">Loading...</resource>
  <resource name="VersionTab">Version</resource>
  <resource name="Site_Version_V1">Version 1 (Original)</resource>
  <resource name="Site_Version_V2">Version 2</resource>
  <resource name="Site_Version">Site Version</resource>
  <resource name="LinksTab">Links</resource>
  <resource name="NavigationTab">Navigation</resource>
  <resource name="Site_Brand">Site Brand</resource>
  <resource name="Site_Search">Site Search</resource>
  <resource name="Dell_Software">Dell Software</resource>
  <resource name="Quest_Software">Quest Software</resource>
  <resource name="Site_Search_Default">Default Telligent Search</resource>
  <resource name="Site_Search_Root">Search Based on Parent Site</resource>
  <resource name="CF_Root_Footer">Utilize Parent Site Footer</resource>
  <resource name="Site_Navigation_Root">Utilize Parent Site Navigation</resource>
  <resource name="CF_Navigation_Content">Custom Navigation Content</resource>
</language></languageResources>
		<files>
			<file name="bookmarks.vm">77u/I3NldCAoJHBhZ2VJbmRleCA9ICRjb3JlX3YyX3V0aWxpdHkuUGFyc2VJbnQoJGNvcmVfdjJfcGFnZS5HZXRRdWVyeVN0cmluZ1ZhbHVlKCd3X3BhZ2VJbmRleCcpKSkNCiNzZXQgKCRjb250ZW50VHlwZUlkcyA9ICRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19jb250ZW50VHlwZUlkcycpKQ0KI2lmICgkY29udGVudFR5cGVJZHMgJiYgJGNvbnRlbnRUeXBlSWRzLkxlbmd0aCA+IDApDQoJI3NldCAoJGJvb2ttYXJrcyA9ICRjb3JlX3YyX2Jvb2ttYXJrLkxpc3QoIiV7IFBhZ2VJbmRleCA9ICRwYWdlSW5kZXgsIFBhZ2VTaXplID0gMTAsIFNvcnRCeSA9ICdEYXRlJywgU29ydE9yZGVyID0gJ0Rlc2NlbmRpbmcnLCBDb250ZW50VHlwZUlkcyA9ICRjb250ZW50VHlwZUlkcyB9IikpDQojZWxzZQ0KCSNzZXQgKCRib29rbWFya3MgPSAkY29yZV92Ml9ib29rbWFyay5MaXN0KCIleyBQYWdlSW5kZXggPSAkcGFnZUluZGV4LCBQYWdlU2l6ZSA9IDEwLCBTb3J0QnkgPSAnRGF0ZScsIFNvcnRPcmRlciA9ICdEZXNjZW5kaW5nJyB9IikpDQojZW5kDQojc2V0ICgkYWNjZXNzaW5nVXNlciA9ICRjb3JlX3YyX3VzZXIuQWNjZXNzaW5nKQ0KDQojc2V0ICgkaGFzTW9yZSA9IGZhbHNlKQ0KI3NldCAoJGN1cnJlbnRQYWdlZFF1YW50aXR5ID0gKCRib29rbWFya3MuUGFnZUluZGV4ICsgMSkgKiAkYm9va21hcmtzLlBhZ2VTaXplKQ0KI2lmICgkYm9va21hcmtzLlRvdGFsQ291bnQgPiAkY3VycmVudFBhZ2VkUXVhbnRpdHkpDQoJI3NldCAoJGhhc01vcmUgPSB0cnVlKQ0KI2VuZA0KDQojc2V0ICgkcm9vdEdyb3VwID0gJGNvcmVfdjJfZ3JvdXAuUm9vdCkNCg0KI2ZvcmVhY2ggKCRib29rbWFyayBpbiAkYm9va21hcmtzKQ0KCSMjIHJlbmRlciBib29rbWFyaw0KCSNzZXQgKCRjb250ZW50ID0gZmFsc2UpDQoJI3NldCAoJGNvbnRlbnQgPSAkYm9va21hcmsuQ29udGVudCkNCgkjaWYgKCRjb250ZW50KQ0KCQkjIyBkZXRlcm1pbmUgYW4gaW1hZ2UgdG8gdXNlLiBQcmVmZXJyaW5nIGNvbnRlbnQgb3ZlciBhcHBsaWNhdGlvbiBvdmVyIGNvbnRhaW5lcg0KCQkjc2V0ICgkaW1hZ2VVcmwgPSBmYWxzZSkNCgkJI3NldCAoJGltYWdlVXJsID0gJGNvbnRlbnQuQXZhdGFyVXJsKQ0KCQkjaWYgKCghJGltYWdlVXJsIHx8ICRpbWFnZVVybCA9PSAnJykgJiYgJGNvbnRlbnQuQXBwbGljYXRpb24pDQoJCQkjc2V0ICgkaW1hZ2VVcmwgPSAkY29udGVudC5BcHBsaWNhdGlvbi5BdmF0YXJVcmwpDQoJCQkjaWYgKCghJGltYWdlVXJsIHx8ICRpbWFnZVVybCA9PSAnJykgJiYgJGNvbnRlbnQuQXBwbGljYXRpb24uQ29udGFpbmVyKQ0KCQkJCSNzZXQgKCRpbWFnZVVybCA9ICRjb250ZW50LkFwcGxpY2F0aW9uLkNvbnRhaW5lci5BdmF0YXJVcmwpDQoJCQkjZW5kDQoJCSNlbmQNCgkJPGxpIGNsYXNzPSJjb250ZW50LWl0ZW0iIGRhdGEtY29udGVudHVybD0iJGNvbnRlbnQuVXJsIiAjaWYoJGhhc01vcmUpIGRhdGEtaGFzbW9yZT0idHJ1ZSIgI2VuZD4NCgkJCSNpZiAoJGltYWdlVXJsKQ0KCQkJCTxkaXYgY2xhc3M9InBvc3QtYXV0aG9yIj4NCgkJCQkJPHNwYW4gY2xhc3M9ImF2YXRhciI+DQoJCQkJCQk8YSBocmVmPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRjb250ZW50LlVybCkiIGNsYXNzPSJpbnRlcm5hbC1saW5rIj4NCgkJCQkJCQkkY29yZV92Ml91aS5HZXRSZXNpemVkSW1hZ2VIdG1sKCRpbWFnZVVybCwgNDAsIDQwLCAiJXtib3JkZXI9JzAnLCBhbHQ9JGNvbnRlbnQuSHRtbE5hbWUoJ1dlYicpLCBSZXNpemVNZXRob2Q9J1pvb21BbmRDcm9wJyxib3JkZXI9JzAnfSIpDQoJCQkJCQk8L2E+DQoJCQkJCTwvc3Bhbj4NCgkJCQk8L2Rpdj4NCgkJCSNlbmQNCgkJCTxkaXYgY2xhc3M9ImNvbnRlbnQiPg0KCQkJCSNzZXQgKCRuYW1lID0gJGNvcmVfdjJfbGFuZ3VhZ2UuVHJ1bmNhdGUoJGNvbnRlbnQuSHRtbE5hbWUoJ1dlYicpLCA1MCwgJ+KApicpKQ0KCQkJCSNpZiAoJG5hbWUubGVuZ3RoID09IDApDQoJCQkJCSNzZXQgKCRuYW1lID0gJGNvcmVfdjJfbGFuZ3VhZ2UuVHJ1bmNhdGUoJGNvbnRlbnQuSHRtbERlc2NyaXB0aW9uKCdXZWInKSwgNTAsICfigKYnKSkNCgkJCQkjZW5kDQoJCQkJJG5hbWUNCgkJCTwvZGl2Pg0KCQkJI2lmICgkY29udGVudCAmJiAkY29udGVudC5BcHBsaWNhdGlvbiAmJiAkY29udGVudC5BcHBsaWNhdGlvbi5Db250YWluZXIgJiYgJGNvbnRlbnQuVXJsICE9ICRjb250ZW50LkFwcGxpY2F0aW9uLkNvbnRhaW5lci5VcmwpDQoJCQkJI2lmICgkcm9vdEdyb3VwLkNvbnRhaW5lcklkICE9ICRjb250ZW50LkFwcGxpY2F0aW9uLkNvbnRhaW5lci5Db250YWluZXJJZCkNCgkJCQkJPHNwYW4gY2xhc3M9ImNvbnRlbnQtZ3JvdXAiPg0KCQkJCQkJPGEgaHJlZj0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkY29udGVudC5BcHBsaWNhdGlvbi5Db250YWluZXIuVXJsKSI+JGNvbnRlbnQuQXBwbGljYXRpb24uQ29udGFpbmVyLkh0bWxOYW1lKCdXZWInKTwvYT4NCgkJCQkJPC9zcGFuPg0KCQkJCSNlbmQNCgkJCSNlbmQNCgkJPC9saT4NCgkjZW5kDQojbm9kYXRhDQoJPGRpdiBjbGFzcz0ibWVzc2FnZSBub3JlY29yZHMiPiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdCb29rbWFya3NfTm9uZScpPC9kaXY+DQojZW5k</file>
			<file name="conversations.vm">77u/I3NldCAoJHBhZ2VJbmRleCA9ICRjb3JlX3YyX3V0aWxpdHkuUGFyc2VJbnQoJGNvcmVfdjJfcGFnZS5HZXRRdWVyeVN0cmluZ1ZhbHVlKCd3X3BhZ2VJbmRleCcpKSkNCiNzZXQgKCRjb252ZXJzYXRpb25zID0gJGNvcmVfdjJfY29udmVyc2F0aW9uLkxpc3QoIiV7IFBhZ2VJbmRleCA9ICRwYWdlSW5kZXgsIFBhZ2VTaXplID0gMTAgfSIpKQ0KI3NldCAoJGFjY2Vzc2luZ1VzZXIgPSAkY29yZV92Ml91c2VyLkFjY2Vzc2luZykNCiNzZXQgKCRtYXhQYXJ0aWNpcGFudEF2YXRhcnMgPSA1KQ0KDQojc2V0ICgkaGFzTW9yZSA9IGZhbHNlKQ0KI3NldCAoJGN1cnJlbnRQYWdlZFF1YW50aXR5ID0gKCRjb252ZXJzYXRpb25zLlBhZ2VJbmRleCArIDEpICogJGNvbnZlcnNhdGlvbnMuUGFnZVNpemUpDQojaWYgKCRjb252ZXJzYXRpb25zLlRvdGFsQ291bnQgPiAkY3VycmVudFBhZ2VkUXVhbnRpdHkpDQoJI3NldCAoJGhhc01vcmUgPSB0cnVlKQ0KI2VuZA0KDQojZm9yZWFjaCAoJGNvbnZlcnNhdGlvbiBpbiAkY29udmVyc2F0aW9ucykNCgkjc2V0ICgkbGFzdE1lc3NhZ2UgPSAkY29udmVyc2F0aW9uLkxhc3RNZXNzYWdlKQ0KDQoJIyMgcmVuZGVyIGNvbnZlcnNhdGlvbg0KCTxsaSBjbGFzcz0iY29udGVudC1pdGVtICNpZighJGNvbnZlcnNhdGlvbi5IYXNSZWFkKSB1bnJlYWQgI2VuZCIgZGF0YS1jb250ZW50dXJsPSIkY29udmVyc2F0aW9uLlVybCIgI2lmKCRoYXNNb3JlKSBkYXRhLWhhc21vcmU9InRydWUiICNlbmQ+DQoJCTxkaXYgY2xhc3M9InBvc3QtYXV0aG9yIj4NCgkJCTxzcGFuIGNsYXNzPSJhdmF0YXIiPg0KCQkJCTxhIGhyZWY9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGxhc3RNZXNzYWdlLkF1dGhvci5VcmwpIiBjbGFzcz0iaW50ZXJuYWwtbGluayI+DQoJCQkJCSRjb3JlX3YyX3VpLkdldFJlc2l6ZWRJbWFnZUh0bWwoJGxhc3RNZXNzYWdlLkF1dGhvci5BdmF0YXJVcmwsIDQwLCA0MCwgIiV7Ym9yZGVyPScwJywgYWx0PSRjb250ZW50Lkh0bWxOYW1lKCdXZWInKSwgUmVzaXplTWV0aG9kPSdab29tQW5kQ3JvcCcsYm9yZGVyPScwJ30iKQ0KCQkJCTwvYT4NCgkJCTwvc3Bhbj4NCgkJPC9kaXY+DQoJCTxkaXYgY2xhc3M9InBvc3QtYXV0aG9ycyI+DQoJCQkjc2V0ICgkRFEgPSAnIicpDQoJCQkjc2V0ICgkYXV0aG9ycyA9ICIiKQ0KCQkJI2ZvcmVhY2ggKCRwYXJ0aWNpcGFudCBpbiAkY29udmVyc2F0aW9uLlBhcnRpY2lwYW50cykNCgkJCQkjc2V0ICgkYXV0aG9ycyA9ICIkYXV0aG9yczxhIGNsYXNzPSR7RFF9aW50ZXJuYWwtbGluayB2aWV3LXVzZXItcHJvZmlsZSR7RFF9IGhyZWY9JHtEUX0kY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRwYXJ0aWNpcGFudC5Qcm9maWxlVXJsKSR7RFF9PiRwYXJ0aWNpcGFudC5EaXNwbGF5TmFtZTwvYT4iKQ0KCQkJI2JldHdlZW4NCgkJCQkjc2V0ICgkYXV0aG9ycyA9ICIkYXV0aG9ycywgIikNCgkJCSNlbmQNCgkJCSRhdXRob3JzDQoJCTwvZGl2Pg0KCQk8ZGl2IGNsYXNzPSJjb250ZW50Ij4NCgkJCSNzZXQgKCRleGNlcnB0ID0gJGNvcmVfdjJfbGFuZ3VhZ2UuVHJ1bmNhdGUoJGxhc3RNZXNzYWdlLkh0bWxEZXNjcmlwdGlvbignV2ViJyksIDUwLCAn4oCmJykpDQoJCQkjaWYgKCRleGNlcnB0Lmxlbmd0aCA9PSAwKQ0KCQkJCSNzZXQgKCRleGNlcnB0ID0gJGNvcmVfdjJfbGFuZ3VhZ2UuVHJ1bmNhdGUoJGNvbnZlcnNhdGlvbi5GaXJzdE1lc3NhZ2UuU3ViamVjdCwgNTAsICfigKYnKSkNCgkJCSNlbmQNCgkJCSRleGNlcnB0DQoJCTwvZGl2Pg0KCQk8ZGl2IGNsYXNzPSJwb3N0LWRhdGUiPg0KCQkJPHNwYW4gY2xhc3M9InZhbHVlIj4kY29yZV92Ml9sYW5ndWFnZS5Gb3JtYXRBZ29EYXRlKCRjb252ZXJzYXRpb24uTGFzdE1lc3NhZ2UuQ3JlYXRlZERhdGUpPC9zcGFuPg0KCQk8L2Rpdj4NCgk8L2xpPg0KI25vZGF0YQ0KCTxkaXYgY2xhc3M9Im1lc3NhZ2Ugbm9yZWNvcmRzIj4kY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnQ29udmVyc2F0aW9uc19Ob25lJyk8L2Rpdj4NCiNlbmQ=</file>
			<file name="custom.vm">77u/I3NldCAoJGl0ZW1zID0gJGNvcmVfdjJfY3VzdG9tTmF2aWdhdGlvbi5EZXNlcmlhbGl6ZSgkY29yZV92Ml93aWRnZXQuR2V0Q3VzdG9tVmFsdWUoJ25hdmlnYXRpb24nLCAnJykpKQ0KDQojZm9yZWFjaCAoJGl0ZW0gaW4gJGl0ZW1zKQ0KCTxsaSBjbGFzcz0iY29udGVudC1pdGVtICNpZigkaXRlbS5Jc1NlbGVjdGVkKSBzZWxlY3RlZCAjZW5kIiBkYXRhLWNvbnRlbnR1cmw9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGl0ZW0uVXJsKSI+DQoJCTxkaXYgY2xhc3M9ImNvbnRlbnQiPiRpdGVtLkxhYmVsPC9kaXY+DQoJPC9saT4NCiNlbmQ=</file>
			<file name="groups.vm">77u/I3NldCAoJHBhZ2VJbmRleCA9ICRjb3JlX3YyX3V0aWxpdHkuUGFyc2VJbnQoJGNvcmVfdjJfcGFnZS5HZXRRdWVyeVN0cmluZ1ZhbHVlKCd3X3BhZ2VJbmRleCcpKSkNCiNzZXQgKCRzaXRlTmF2aWdhdGlvblR5cGUgPSAkY29yZV92Ml9wYWdlLkdldFF1ZXJ5U3RyaW5nVmFsdWUoJ3dfc2l0ZU5hdmlnYXRpb25UeXBlJykpDQojc2V0ICgkYWNjZXNzaW5nVXNlciA9ICRjb3JlX3YyX3VzZXIuQWNjZXNzaW5nKQ0KI3NldCgkZ3JvdXBTZWxlY3Rpb24gPSBmYWxzZSkNCiNzZXQoJGdyb3VwU2VsZWN0aW9uID0gJGNvcmVfdjJfd2lkZ2V0LkdldEN1c3RvbVZhbHVlKCdncm91cFNlbGVjdGlvbkN1c3RvbScsICcnKSkNCg0KI3NldCAoJGdyb3VwTGlzdE9wdGlvbnMgPSAiJXsgUGFnZUluZGV4ID0gJHBhZ2VJbmRleCwgUGFnZVNpemUgPSAxMCwgU29ydE9yZGVyID0gJ0FzY2VuZGluZycgfSIpDQojaWYgKCRzaXRlTmF2aWdhdGlvblR5cGUgPT0gJ215X2dyb3VwcycpDQoJI3NldCAoJGluY2x1ZGVQZW5kaW5nTWVtYmVyc2hpcHMgPSB0cnVlKQ0KCSRncm91cExpc3RPcHRpb25zLkFkZCgnVXNlcklkJywgJGFjY2Vzc2luZ1VzZXIuSWQpDQoJJGdyb3VwTGlzdE9wdGlvbnMuQWRkKCdJbmNsdWRlUGVuZGluZ01lbWJlcnNoaXBzJywgJGluY2x1ZGVQZW5kaW5nTWVtYmVyc2hpcHMpDQoJJGdyb3VwTGlzdE9wdGlvbnMuQWRkKCdTb3J0QnknLCAnTmFtZScpDQojZWxzZWlmICgkc2l0ZU5hdmlnYXRpb25UeXBlID09ICdncm91cCcgJiYgJGdyb3VwU2VsZWN0aW9uICYmICRncm91cFNlbGVjdGlvbi5MZW5ndGggPiAwKQ0KCSNzZXQoJGdyb3VwU2VsZWN0aW9uID0gJGNvcmVfdjJfdXRpbGl0eS5Kb2luKCcsJywgJGNvcmVfdjJfcGFnZS5QYXJzZVF1ZXJ5U3RyaW5nKCRncm91cFNlbGVjdGlvbikuVmFsdWVzKCdncm91cCcpKSkNCgkkZ3JvdXBMaXN0T3B0aW9ucy5BZGQoJ0NvbnRhaW5lcklkcycsICRncm91cFNlbGVjdGlvbikNCgkkZ3JvdXBMaXN0T3B0aW9ucy5BZGQoJ1NvcnRCeScsICdDb250YWluZXJJZHNPcmRlcicpDQojZWxzZQ0KCSRncm91cExpc3RPcHRpb25zLkFkZCgnU29ydEJ5JywgJ1NvcnRPcmRlcicpDQojZW5kDQoNCiRncm91cExpc3RPcHRpb25zLkFkZCgnUGFyZW50R3JvdXBJZCcsICRjb3JlX3YyX2dyb3VwLlJvb3QuSWQpDQoNCiNzZXQgKCRncm91cHMgPSAkY29yZV92Ml9ncm91cC5MaXN0KCRncm91cExpc3RPcHRpb25zKSkNCg0KI3NldCAoJGhhc01vcmUgPSBmYWxzZSkNCiNzZXQgKCRjdXJyZW50UGFnZWRRdWFudGl0eSA9ICgkZ3JvdXBzLlBhZ2VJbmRleCArIDEpICogJGdyb3Vwcy5QYWdlU2l6ZSkNCiNpZiAoJGdyb3Vwcy5Ub3RhbENvdW50ID4gJGN1cnJlbnRQYWdlZFF1YW50aXR5KQ0KCSNzZXQgKCRoYXNNb3JlID0gdHJ1ZSkNCiNlbmQNCg0KI3NldCAoJGN1cnJlbnRHcm91cFBhdGggPSAkY29yZV92Ml9ncm91cC5DdXJyZW50R3JvdXBQYXRoKQ0KDQojZm9yZWFjaCAoJGdyb3VwIGluICRncm91cHMpDQoJIyMgcmVuZGVyIGdyb3VwDQoJI3NldCAoJGltYWdlVXJsID0gZmFsc2UpDQoJI3NldCAoJGltYWdlVXJsID0gJGdyb3VwLkF2YXRhclVybCkNCgkjc2V0ICgkc2VsZWN0ZWQgPSBmYWxzZSkNCgkjZm9yZWFjaCAoJGdyb3VwUGF0aENvbXBvbmVudCBpbiAkY3VycmVudEdyb3VwUGF0aCkNCgkJI2lmICgkZ3JvdXBQYXRoQ29tcG9uZW50LklkID09ICRncm91cC5JZCkNCgkJCSNzZXQgKCRzZWxlY3RlZCA9IHRydWUpDQoJCSNlbmQNCgkjZW5kDQoJPGxpIGNsYXNzPSJjb250ZW50LWl0ZW0gI2lmICgkc2VsZWN0ZWQpIHNlbGVjdGVkICNlbmQiIGRhdGEtY29udGVudHVybD0iJGdyb3VwLlVybCIgI2lmKCRoYXNNb3JlKSBkYXRhLWhhc21vcmU9InRydWUiICNlbmQ+DQoJCSNpZiAoJGltYWdlVXJsKQ0KCQkJPGRpdiBjbGFzcz0icG9zdC1hdXRob3IiPg0KCQkJCTxzcGFuIGNsYXNzPSJhdmF0YXIiPg0KCQkJCQk8YSBocmVmPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRncm91cC5VcmwpIiBjbGFzcz0iaW50ZXJuYWwtbGluayI+DQoJCQkJCQkkY29yZV92Ml91aS5HZXRSZXNpemVkSW1hZ2VIdG1sKCRpbWFnZVVybCwgNDAsIDQwLCAiJXtib3JkZXI9JzAnLCBhbHQ9JGdyb3VwLk5hbWUsIFJlc2l6ZU1ldGhvZD0nWm9vbUFuZENyb3AnLGJvcmRlcj0nMCd9IikNCgkJCQkJPC9hPg0KCQkJCTwvc3Bhbj4NCgkJCTwvZGl2Pg0KCQkjZW5kDQoJCTxkaXYgY2xhc3M9ImNvbnRlbnQiPg0KCQkJJGNvcmVfdjJfbGFuZ3VhZ2UuVHJ1bmNhdGUoJGdyb3VwLk5hbWUsIDUwLCAn4oCmJykNCgkJPC9kaXY+DQoJCSNpZiAoJGdyb3VwLkRlc2NyaXB0aW9uICYmICRncm91cC5EZXNjcmlwdGlvbi5sZW5ndGggPiAwKQ0KCQkJPGRpdiBjbGFzcz0iZGVzY3JpcHRpb24iPg0KCQkJCSRncm91cC5EZXNjcmlwdGlvbg0KCQkJPC9kaXY+DQoJCSNlbmQNCgk8L2xpPg0KDQojbm9kYXRhDQoJPGRpdiBjbGFzcz0ibWVzc2FnZSBub3JlY29yZHMiPiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdHcm91cHNfTm9Hcm91cHMnKTwvZGl2Pg0KI2VuZA0K</file>
			<file name="navigation-v1.vm"></file>
			<file name="navigation-v2.vm">I3NldCAoJGxpbmtzID0gJGNvcmVfdjJfcGFnZS5QYXJzZVF1ZXJ5U3RyaW5nKCRjb3JlX3YyX3dpZGdldC5HZXRDdXN0b21WYWx1ZSgnbGlua3MnLCdMaW5rPU5vdGlmaWNhdGlvbnMmYW1wO0xpbms9SW5ib3gmYW1wO0xpbms9Qm9va21hcmtzJmFtcDtMaW5rPVVzZXInKSkpCiNzZXQgKCRoYXNMaW5rcyA9IGZhbHNlKQoKI3NldCAoJHVzZXIgPSAkY29yZV92Ml91c2VyLkFjY2Vzc2luZykKI3NldCAoJGlzUmVnaXN0ZXJlZCA9ICRjb3JlX3YyX3VzZXIuSXNSZWdpc3RlcmVkKCR1c2VyLklkKSkKI3NldCAoJGlzSW1wZXJzb25hdGVkID0gJGNvcmVfdjJfYXV0aGVudGljYXRpb24uSXNJbXBlcnNvbmF0ZWQoKSkKI3NldCAoJGltcGVyc29uYXRvciA9ICRjb3JlX3YyX2F1dGhlbnRpY2F0aW9uLkltcGVyc29uYXRvcigpKQoKI3NldCAoJGxpc3RUZW1wbGF0ZSA9ICdzaXRlLWJhbm5lci1saXN0LXRlbXBsYXRlJykKI3NldCAoJG5vdGlmaWNhdGlvblByZWZlcmVuY2VUZW1wbGF0ZSA9ICdzaXRlLWJhbm5lci1ub3RpZmljYXRpb24tcHJlZmVyZW5jZXMtdGVtcGxhdGUnKQojc2V0ICgkYm9va21hcmtGaWx0ZXJUZW1wbGF0ZSA9ICdzaXRlLWJhbm5lci1ib29rbWFyay1maWx0ZXItdGVtcGxhdGUnKQojc2V0ICgkbm90aWZpY2F0aW9uRmlsdGVyVGVtcGxhdGUgPSAnc2l0ZS1iYW5uZXItbm90aWZpY2F0aW9uLWZpbHRlci10ZW1wbGF0ZScpCiNzZXQgKCR1c2VyVGVtcGxhdGUgPSAnc2l0ZS1iYW5uZXItdXNlci10ZW1wbGF0ZScpCiNzZXQgKCRzZWFyY2hGaWx0ZXJUZW1wbGF0ZSA9ICdzaXRlLWJhbm5lci1zZWFyY2gtZmlsdGVyLXRlbXBsYXRlJykKI3NldCAoJG5vdGlmaWNhdGlvbnNVbnJlYWQgPSAwKQojc2V0ICgkY29udmVyc2F0aW9uc1VucmVhZCA9IDApCiNzZXQgKCRpbmNsdWRlSmF2YXNjcmlwdCA9IGZhbHNlKQojc2V0ICgkaXNCb29rbWFya2VkID0gZmFsc2UpCiNzZXQgKCRjdXJyZW50Q29udGVudElkID0gJycpCgojc2V0ICgkY3VycmVudENvbnRlbnQgPSBmYWxzZSkKI3NldCAoJGN1cnJlbnRDb250ZW50ID0gJGNvcmVfdjJfY29udGVudC5DdXJyZW50KQojc2V0ICgkY3VycmVudEFwcGxpY2F0aW9uID0gZmFsc2UpCiNzZXQgKCRjdXJyZW50QXBwbGljYXRpb24gPSAkY29yZV92Ml9hcHBsaWNhdGlvbi5DdXJyZW50KQojc2V0ICgkY3VycmVudEdyb3VwID0gZmFsc2UpCiNzZXQgKCRjdXJyZW50R3JvdXAgPSAkY29yZV92Ml9ncm91cC5DdXJyZW50KQojc2V0ICgkcm9vdEdyb3VwID0gZmFsc2UpCiNzZXQgKCRyb290R3JvdXAgPSAkY29yZV92Ml9ncm91cC5Sb290KQojaWYgKCRyb290R3JvdXAuSWQgPT0gJGN1cnJlbnRHcm91cC5JZCkKCSNzZXQgKCRjdXJyZW50R3JvdXAgPSBmYWxzZSkKI2VuZAoKIyMgbWFyayBhbnkgdW5yZWFkIG5vdGlmaWNhdGlvbnMgZm9yIHRoZSBjdXJyZW50IHBpZWNlIG9mIGNvbnRlbnQgYXMgcmVhZAojaWYgKCRjdXJyZW50Q29udGVudCAmJiAkaXNSZWdpc3RlcmVkKQoJIyMgZGV0ZWN0IGlmIGN1cnJlbnQgY29udGVudCBpcyBhY3R1YWxseSBhbiBhcHBsaWNhdGlvbgoJI3NldCAoJGlzQXBwbGljYXRpb24gPSBmYWxzZSkKCSNzZXQgKCRhcHBsaWNhdGlvbiA9ICRjdXJyZW50Q29udGVudC5BcHBsaWNhdGlvbikKCSNpZiAoISRhcHBsaWNhdGlvbiB8fCAkYXBwbGljYXRpb24uQXBwbGljYXRpb25JZCA9PSAkY3VycmVudENvbnRlbnQuQ29udGVudElkKQoJCSNzZXQgKCRpc0FwcGxpY2F0aW9uID0gdHJ1ZSkKCSNlbmQKCgkjaWYgKCEkaXNBcHBsaWNhdGlvbikKCQkjIyBsb2FkIGFuZCBtYXJrIGFzIHJlYWQgYW55IHVucmVhZCBub3RpZmljYXRpb25zIGZvciB0aGlzIGNvbnRlbnQKCQkjc2V0ICgkdW5yZWFkQ29udGVudE5vdGlmaWNhdGlvbnMgPSAkY29yZV92Ml9ub3RpZmljYXRpb24uTGlzdCgiJXsgQ29udGVudElkID0gJGN1cnJlbnRDb250ZW50LkNvbnRlbnRJZCwgQ29udGVudFR5cGVJZCA9ICRjdXJyZW50Q29udGVudC5Db250ZW50VHlwZUlkLCBJc1JlYWQgPSAnZmFsc2UnIH0iKSkKCQkjZm9yZWFjaCAoJHVucmVhZE5vdGlmaWNhdGlvbiBpbiAkdW5yZWFkQ29udGVudE5vdGlmaWNhdGlvbnMpCgkJCSNzZXQgKCR1cGRhdGVkTm90aWZpY2F0aW9uID0gJGNvcmVfdjJfbm90aWZpY2F0aW9uLlVwZGF0ZSgkdW5yZWFkTm90aWZpY2F0aW9uLk5vdGlmaWNhdGlvbklkLCAiJXsgTWFya0FzUmVhZCA9ICd0cnVlJyB9IikpCgkJI2VuZAoKCQkjIyBGb3J1bSBSZXBseSBOb3RpZmljYXRpb25zIGFyZSBnZW5lcmFsbHkgbWFkZSBhZ2FpbnN0IEZvcnVtIFRocmVhZHMsIG5vdCBSZXBsaWVzLiBTbyBhbHNvLCBtYXJrIGFueSBub3RpZmljYXRpb25zIGZvciB0aGVpciBwYXJlbnQgdGhyZWFkcywgZXhwbGljaXRseS4KCQkjaWYgKCRjdXJyZW50Q29udGVudC5Db250ZW50VHlwZUlkID09ICRjb3JlX3YyX2ZvcnVtUmVwbHkuQ29udGVudFR5cGVJZCkKCQkJI3NldCAoJGZvcnVtUmVwbHkgPSAkY29yZV92Ml9mb3J1bVJlcGx5LkdldCgkY3VycmVudENvbnRlbnQuQ29udGVudElkKSkKCQkJI2lmICgkZm9ydW1SZXBseSkKCQkJCSNzZXQgKCRmb3J1bVRocmVhZCA9ICRjb3JlX3YyX2ZvcnVtVGhyZWFkLkdldCgkZm9ydW1SZXBseS5UaHJlYWRJZCkpCgkJCQkjaWYgKCRmb3J1bVRocmVhZCkKCQkJCQkjIyBsb2FkIGFuZCBtYXJrIGFzIHJlYWQgYW55IHVucmVhZCBub3RpZmljYXRpb25zIGZvciB0aGlzIGZvcnVtIHRocmVhZAoJCQkJCSNzZXQgKCR1bnJlYWRDb250ZW50Tm90aWZpY2F0aW9ucyA9ICRjb3JlX3YyX25vdGlmaWNhdGlvbi5MaXN0KCIleyBDb250ZW50SWQgPSAkZm9ydW1UaHJlYWQuQ29udGVudElkLCBDb250ZW50VHlwZUlkID0gJGZvcnVtVGhyZWFkLmZvcnVtVGhyZWFkQ29udGVudFR5cGVJZCwgSXNSZWFkID0gJ2ZhbHNlJyB9IikpCgkJCQkJI2ZvcmVhY2ggKCR1bnJlYWROb3RpZmljYXRpb24gaW4gJHVucmVhZENvbnRlbnROb3RpZmljYXRpb25zKQoJCQkJCQkjc2V0ICgkdXBkYXRlZE5vdGlmaWNhdGlvbiA9ICRjb3JlX3YyX25vdGlmaWNhdGlvbi5VcGRhdGUoJHVucmVhZE5vdGlmaWNhdGlvbi5Ob3RpZmljYXRpb25JZCwgIiV7IE1hcmtBc1JlYWQgPSAndHJ1ZScgfSIpKQoJCQkJCSNlbmQKCQkJCSNlbmQKCQkJI2VuZAoJCSNlbmQKCSNlbmQKI2VuZAoKIyMgc2l0ZSBuYXZpZ2F0aW9uCiNzZXQgKCRoYXNTaXRlTmF2aWdhdGlvbiA9IGZhbHNlKQojc2V0ICgkc2l0ZU5hdmlnYXRpb25VcmwgPSAnJykKI3NldCAoJHNpdGVOYXZpZ2F0aW9uVHlwZSA9ICRjb3JlX3YyX3dpZGdldC5HZXRTdHJpbmdWYWx1ZSgnc2l0ZU5hdmlnYXRpb24yJywgJ2V4Y2x1ZGUnKSkKCiNzZXQgKCRzZWFyY2hJZCA9ICRjb3JlX3YyX3dpZGdldC5VbmlxdWVJZCgnU2VhcmNoJykpCiNzZXQgKCRiYW5uZXJJZCA9ICRjb3JlX3YyX3dpZGdldC5VbmlxdWVJZCgnYmFubmVyJykpCiNzZXQgKCRzZWFyY2hGaWVsZHNJZCA9ICRjb3JlX3YyX3dpZGdldC5VbmlxdWVJZCgnc2VhcmNoRmllbGRzJykpCiNzZXQgKCRiYW5uZXJTaXRlTGlua3NJZCA9ICRjb3JlX3YyX3dpZGdldC5VbmlxdWVJZCgnYmFubmVyU2l0ZUxpbmtzJykpCiNzZXQgKCRiYW5uZXJVc2VyTGlua3NJZCA9ICRjb3JlX3YyX3dpZGdldC5VbmlxdWVJZCgnYmFubmVyTGlua3MnKSkKI3NldCAoJGhhbmRoZWxkU2VhcmNoRmllbGRzSWQgPSAkY29yZV92Ml93aWRnZXQuVW5pcXVlSWQoJ2hhbmRoZWxkU2VhcmNoRmllbGRzJykpCiNzZXQgKCRoYW5kaGVsZEJhbm5lclVzZXJMaW5rc0lkID0gJGNvcmVfdjJfd2lkZ2V0LlVuaXF1ZUlkKCdoYW5kaGVsZEJhbm5lckxpbmtzJykpCiNzZXQgKCRoYW5kaGVsZFNlYXJjaEZpZWxkc0xpbmtJZCA9ICRjb3JlX3YyX3dpZGdldC5VbmlxdWVJZCgnaGFuZGhlbGRTZWFyY2hGaWVsZHNMaW5rJykpCiNzZXQgKCRoYW5kaGVsZFNpdGVOYXZpZ2F0aW9uTGlua0lkID0gJGNvcmVfdjJfd2lkZ2V0LlVuaXF1ZUlkKCdoYW5kaGVsZFNpdGVOYXZpZ2F0aW9uTGluaycpKQojc2V0ICgkaGFuZGhlbGRCYW5uZXJVc2VyTGlua3NMaW5rSWQgPSAkY29yZV92Ml93aWRnZXQuVW5pcXVlSWQoJ2hhbmRoZWxkQmFubmVyTGlua3NMaW5rJykpCiNzZXQgKCRoYW5kaGVsZEJhbm5lclVzZXJMaW5rc0NvdW50SWQgPSAkY29yZV92Ml93aWRnZXQuVW5pcXVlSWQoJ2hhbmRoZWxkQmFubmVyTGlua3NDb3VudCcpKQojc2V0ICgkaGFuZGhlbGRTaXRlTGlua3NMaW5rSWQgPSAkY29yZV92Ml93aWRnZXQuVW5pcXVlSWQoJ2hhbmRoZWxkU2l0ZUxpbmtzTGluaycpKQojc2V0ICgkaGFuZGhlbGRTaXRlTGlua3NJZCA9ICRjb3JlX3YyX3dpZGdldC5VbmlxdWVJZCgnaGFuZGhlbGRTaXRlTGlua3MnKSkKCiNzZXQgKCRjdXJyZW50U2VhY2hRdWVyeSA9ICcnKQojc2V0ICgkY3VycmVudFNlYWNoUXVlcnkgPSAkY29yZV92Ml9lbmNvZGluZy5IdG1sRW5jb2RlKCRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgncScpKSkKCiNpZiAoJHNpdGVWZXJzaW9uID09ICJ2MiIpCiAgICAjc2V0KCRzaXRlU2VhcmNoID0gJGNvcmVfdjJfd2lkZ2V0LkdldEN1c3RvbVZhbHVlKCdzaXRlU2VhcmNoJywgJycpKQogICAgI3NldCgkdXNlUm9vdEZvb3RlciA9ICRjb3JlX3YyX3dpZGdldC5HZXRDdXN0b21WYWx1ZSgndXNlUm9vdEZvb3RlcicsICcnKSkKICAgICNzZXQoJHNpdGVCcmFuZCA9ICRjb3JlX3YyX3dpZGdldC5HZXRDdXN0b21WYWx1ZSgnc2l0ZUJyYW5kJywgJ2RzZycpKQogICAgI3NldCgkbmF2SFRNTCA9ICRjb3JlX3YyX3VpLlJlbmRlcigkY29yZV92Ml93aWRnZXQuR2V0SHRtbFZhbHVlKCduYXZIVE1MJywnJykpKQogICAgI3NldCAoJHV0aWxpdHlEcm9wZG93biA9ICRjb3JlX3YyX3dpZGdldC5VbmlxdWVJZCgndXRpbGl0eURyb3Bkb3duJykpCiNlbmQKCjxoZWFkZXIgY2xhc3M9Im1hc3RoZWFkIiBpZD0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkYmFubmVySWQpIj4KCTxuYXYgY2xhc3M9Im5hdmJhciIgcm9sZT0ibmF2aWdhdGlvbiI+CgkJPGRpdiBjbGFzcz0idXRpbGl0eS1zZWN0aW9uLXdyYXBwZXIiPgoJCQk8ZGl2IGNsYXNzPSJ1dGlsaXR5LXNlY3Rpb24iPgoJCQkJPGRpdiBjbGFzcz0ibmF2YmFyLWJyYW5kIj4KCQkJCQk8YSBocmVmPSIvIj4KCQkJCQkgICAgI2lmICgkc2l0ZUJyYW5kID09ICJxdWVzdCIpCgkJCQkJCTxpbWcgc3JjPSIvaW1hZ2VzL3NoYXJlZC9xdWVzdC1sb2dvLnBuZyI+CgkJCQkJCSNlbHNlaWYgKCRzaXRlQnJhbmQgPT0gImRzZyIpCgkJCQkJCTxpbWcgc3JjPSIvaW1hZ2VzL3NoYXJlZC9sb2dvLWJsdWUucG5nIj4KCQkJCQkJI2VuZAoJCQkJCTwvYT4KCQkJCTwvZGl2PgoKCQkJCTxkaXYgaWQ9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJHNlYXJjaEZpZWxkc0lkKSIgY2xhc3M9InNlYXJjaC1jb250YWluZXIiPgoJCQkJCTxkaXY+CgkJCQkJCTxpbnB1dCBjbGFzcz0ic2VhcmNoLXF1ZXJ5IGZvcm0tY29udHJvbCIgYXV0b2NvbXBsZXRlPSJvZmYiIHR5cGU9InNlYXJjaCIgcGxhY2Vob2xkZXI9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ1NlYXJjaCcpKSIgaWQ9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJHNlYXJjaElkKSIgdmFsdWU9IiQhY3VycmVudFNlYWNoUXVlcnkiIC8+CgkJCQkJCTxidXR0b24gY2xhc3M9ImJ0biI+CgkJCQkJCQk8aSBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zZWFyY2giPjwvaT4KCQkJCQkJPC9idXR0b24+CgkJCQkJPC9kaXY+CgkJCQkJPGRpdiBjbGFzcz0iYXV0b2NvbXBsZXRlIj48L2Rpdj4KCQkJCTwvZGl2PgoKCQkJCTxkaXYgY2xhc3M9Im5hdi1jb250YWluZXIiPgoJCQkgICAgI2lmICgkc2l0ZU5hdmlnYXRpb25UeXBlID09ICJyb290IikKCQkJICAgIDxkaXYgY2xhc3M9Im1haW4tbmF2LXNlY3Rpb24iIGRhdGEtYWpheD0idHJ1ZSI+CgkJCSAgICAgICAgPGRpdiBjbGFzcz0ic2hhZG93LW92ZXJsYXktbGVmdCI+PC9kaXY+CgkJCSAgICA8L2Rpdj4KCQkJICAgICNlbHNlaWYgKCRzaXRlTmF2aWdhdGlvblR5cGUgPT0gImN1c3RvbSIpCgkJCSAgICA8ZGl2IGNsYXNzPSJtYWluLW5hdi1zZWN0aW9uIj4KCQkJCQk8ZGl2IGNsYXNzPSJzaGFkb3ctb3ZlcmxheS1sZWZ0Ij48L2Rpdj4KCQkJCQkJJG5hdkhUTUwKCQkJCQk8L2Rpdj4KCQkJCSNlbmQKCQkJCTwvZGl2PgoKCQkJCTx1bCBjbGFzcz0idXRpbGl0eSBkZXNrdG9wIiBpZD0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkYmFubmVyVXNlckxpbmtzSWQpIj4KCQkJCQk8bGkgY2xhc3M9ImRyb3Bkb3duIG1vYmlsZS1zZWFyY2gtYnV0dG9uIHNlYXJjaC1idXR0b24iPgoJCQkJCQk8YSBocmVmPSIjIj4KCQkJCQkJCTxzcGFuIGNsYXNzPSJ0b3Atc2VhcmNoLWljb24iPjxpIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXNlYXJjaCI+PC9pPjwvc3Bhbj4KCQkJCQkJPC9hPgoJCQkJCTwvbGk+CiAgICAgICAgICAgICNzZXQgKCRiYW5uZXJMaW5rcyA9ICRsaW5rcy5WYWx1ZXMoJ0xpbmsnKSkKICAgICAgICAgICAgI2ZvcmVhY2goJGxpbmsgaW4gJGJhbm5lckxpbmtzKQogICAgICAgICAgICAjYmVmb3JlYWxsCiAgICAgICAgICAgICNlYWNoCiAgICAgICAgICAgICAgI3NldCgkdXJsID0gZmFsc2UpCiAgICAgICAgICAgICAgI2lmKCRsaW5rID09ICdCb29rbWFya3MnICYmICRpc1JlZ2lzdGVyZWQpCiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im1vYmlsZSI+CiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJib29rbWFya3MiIGlkPSIkY29yZV92Ml93aWRnZXQuVW5pcXVlSWQoJ2Jvb2ttYXJrcycpIiB0aXRsZT0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnQm9va21hcmtzJykpIj4kY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnQm9va21hcmtzJyk8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgI3NldCAoJGhhc0xpbmtzID0gdHJ1ZSkKCiAgICAgICAgICAgICAgICAjIyBidWlsZCBkeW5hbWljIGxpc3RzIG9mIGFsbCBjb250ZW50IHR5cGVzLCBhcHBsaWNhdGlvbiB0eXBlcywgYW5kIGNvbnRhaW5lciB0eXBlcyBmb3IgZmlsdGVyaW5nCiAgICAgICAgICAgICAgICAjc2V0ICgkYWxsQ29udGVudFR5cGVzID0gJGNvcmVfdjJfY29udGVudFR5cGUuTGlzdCgpKQogICAgICAgICAgICAgICAgI3NldCAoJGNvbnRlbnRUeXBlcyA9ICIiKQogICAgICAgICAgICAgICAgI3NldCAoJGFwcGxpY2F0aW9uQ29udGVudFR5cGVzID0gIiIpCiAgICAgICAgICAgICAgICAjc2V0ICgkY29udGFpbmVyQ29udGVudFR5cGVzID0gIiIpCiAgICAgICAgICAgICAgICAjZm9yZWFjaCAoJHR5cGUgaW4gJGFsbENvbnRlbnRUeXBlcykKICAgICAgICAgICAgICAgICAgI2lmICgkY29yZV92Ml9ib29rbWFyay5TdXBwb3J0c0Jvb2ttYXJrcygkdHlwZS5JZCkpCiAgICAgICAgICAgICAgICAgICAgI3NldCAoJGNvbnRhaW5lclR5cGUgPSBmYWxzZSkKICAgICAgICAgICAgICAgICAgICAjc2V0ICgkY29udGFpbmVyVHlwZSA9ICRjb3JlX3YyX2NvbnRhaW5lclR5cGUuR2V0KCR0eXBlLklkKSkKICAgICAgICAgICAgICAgICAgICAjaWYgKCRjb250YWluZXJUeXBlICYmICRjb250YWluZXJUeXBlLklkKQogICAgICAgICAgICAgICAgICAgICAgI3NldCAoJGNvbnRhaW5lckNvbnRlbnRUeXBlcyA9ICIke2NvbnRhaW5lckNvbnRlbnRUeXBlc30ke3R5cGUuSWR9OiR7dHlwZS5OYW1lfSwiKQogICAgICAgICAgICAgICAgICAgICNlbHNlCiAgICAgICAgICAgICAgICAgICAgICAjc2V0ICgkYXBwbGljYXRpb25UeXBlID0gZmFsc2UpCiAgICAgICAgICAgICAgICAgICAgICAjc2V0ICgkYXBwbGljYXRpb25UeXBlID0gJGNvcmVfdjJfYXBwbGljYXRpb25UeXBlLkdldCgkdHlwZS5JZCkpCiAgICAgICAgICAgICAgICAgICAgICAjaWYgKCRhcHBsaWNhdGlvblR5cGUgJiYgJGFwcGxpY2F0aW9uVHlwZS5JZCkKICAgICAgICAgICAgICAgICAgICAgICAgI3NldCAoJGFwcGxpY2F0aW9uQ29udGVudFR5cGVzID0gIiR7YXBwbGljYXRpb25Db250ZW50VHlwZXN9JHt0eXBlLklkfSwiKQogICAgICAgICAgICAgICAgICAgICAgI2Vsc2UKICAgICAgICAgICAgICAgICAgICAgICAgI3NldCAoJGNvbnRlbnRUeXBlcyA9ICIke2NvbnRlbnRUeXBlc30ke3R5cGUuSWR9LCIpCiAgICAgICAgICAgICAgICAgICAgICAjZW5kCiAgICAgICAgICAgICAgICAgICAgI2VuZAogICAgICAgICAgICAgICAgICAjZW5kCiAgICAgICAgICAgICAgICAjZW5kCgogICAgICAgICAgICAgICNlbHNlaWYoJGxpbmsgPT0gJ05vdGlmaWNhdGlvbnMnICYmICRpc1JlZ2lzdGVyZWQpCiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im1vYmlsZSI+CiAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJub3RpZmljYXRpb25zIiBpZD0iJGNvcmVfdjJfd2lkZ2V0LlVuaXF1ZUlkKCdub3RpZmljYXRpb25zJykiPiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdOb3RpZmljYXRpb25zJyk8L2E+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgI3NldCAoJGhhc0xpbmtzID0gdHJ1ZSkKICAgICAgICAgICAgICAgICNzZXQgKCRvcHRpb25zID0gIiV7IElzUmVhZCA9ICdGYWxzZScsIFBhZ2VTaXplID0gMSB9IikKICAgICAgICAgICAgICAgICNzZXQgKCRjb252ZXJzYXRpb25NZXNzYWdlTm90aWZpY2F0aW9uRmlsdGVyTmFtZSA9ICJfRmlsdGVyc18ke2NvcmVfdjJfY29udmVyc2F0aW9uTWVzc2FnZS5Ob3RpZmljYXRpb25UeXBlSWR9IikKICAgICAgICAgICAgICAgICRvcHRpb25zLkFkZCgkY29udmVyc2F0aW9uTWVzc2FnZU5vdGlmaWNhdGlvbkZpbHRlck5hbWUsICdFeGNsdWRlJykKICAgICAgICAgICAgICAgICNzZXQgKCRub3RpZmljYXRpb25zVW5yZWFkID0gJGNvcmVfdjJfbm90aWZpY2F0aW9uLkxpc3QoJG9wdGlvbnMpLlRvdGFsQ291bnQpCgogICAgICAgICAgICAgICNlbHNlaWYoJGxpbmsgPT0gJ1VzZXInKQogICAgICAgICAgICAgICAgI2lmICgkaXNSZWdpc3RlcmVkKQogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im1vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImludGVybmFsLWxpbmsgdXNlciIgaWQ9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGNvcmVfdjJfd2lkZ2V0LlVuaXF1ZUlkKCd1c2VyJykpIiB0aXRsZT0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkY29yZV92Ml91c2VyLkFjY2Vzc2luZy5EaXNwbGF5TmFtZSkiPgogICAgICAgICAgICAgICAgICAgICNzZXQoJGF2YXRhckFub255bW91c0NoZWNrID0gJGNvcmVfdjJfdXRpbGl0eS5Jc01hdGNoKCR1c2VyLkF2YXRhclVybCwgJy4qYW5vbnltb3VzLionKSkKICAgICAgICAgICAgICAgICAgICAjaWYoJGF2YXRhckFub255bW91c0NoZWNrKQogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tdXNlciI+PHNwYW4gY2xhc3M9ImJhZGdlIj48aSBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1vayI+PC9pPjwvc3Bhbj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgI2Vsc2UKCSAgICAgICAgICAgICAgICAgICRjb3JlX3YyX3VpLkdldFJlc2l6ZWRJbWFnZUh0bWwoJHVzZXIuQXZhdGFyVXJsLCAyMiwgMjIsICIleyBSZXNpemVNZXRob2QgPSAnWm9vbUFuZENyb3AnIH0iKQogICAgICAgICAgICAgICAgICAgICNlbmQKICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICNzZXQoJGhhc0xpbmtzID0gdHJ1ZSkKICAgICAgICAgICAgICAgICNlbHNlCiAgICAgICAgICAgICAgICAgICNzZXQoJHVybCA9ICRjb3JlX3YyX3VybHMuTG9naW4oKSkKICAgICAgICAgICAgICAgICAgI2lmICgkdXJsKQogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibW9iaWxlIj4KICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJHVybCkiIGNsYXNzPSJpbnRlcm5hbC1saW5rIHVzZXIiIHRpdGxlPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdKb2luU2lnbkluJykpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi11c2VyIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAjc2V0KCRoYXNMaW5rcyA9IHRydWUpCiAgICAgICAgICAgICAgICAgICNlbmQKICAgICAgICAgICAgICAgICNlbmQKCiAgICAgICAgICAgICAgI2Vsc2VpZigkbGluayA9PSAnSW5ib3gnICYmICRpc1JlZ2lzdGVyZWQpCiAgICAgICAgICAgICAgICAjc2V0KCR1cmwgPSAkY29yZV92Ml91cmxzLkNvbnZlcnNhdGlvbnMoKSkKICAgICAgICAgICAgICAgICNpZiAoJHVybCkKICAgICAgICAgICAgICAgICAgI3NldCgkY29udmVyc2F0aW9uc1VucmVhZCA9ICRjb3JlX3YyX2NvbnZlcnNhdGlvbi5VbnJlYWRDb3VudCgpKQogICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im1vYmlsZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9ImNvbnZlcnNhdGlvbnMiIGlkPSIkY29yZV92Ml93aWRnZXQuVW5pcXVlSWQoJ2NvbnZlcnNhdGlvbnMnKSI+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ0NvbnZlcnNhdGlvbnNfSW5ib3gnKTwvYT4KICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgI3NldCgkaGFzTGlua3MgPSB0cnVlKQogICAgICAgICAgICAgICAgI2VuZAogICAgICAgICAgICAgICNlbmQKICAgICAgICAgICAgI2FmdGVyYWxsCiAgICAgICAgICAgICNlbmQKCQkJCTwvdWw+CgoJCQkJPHVsIGNsYXNzPSJ1dGlsaXR5IG1vYmlsZSI+CgkJCQkJPGxpIGNsYXNzPSJkcm9wZG93biBtb2JpbGUtc2VhcmNoLWJ1dHRvbiBzZWFyY2gtYnV0dG9uIj4KICAgICAgICAgICAgPGEgaHJlZj0iIyI+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRvcC1zZWFyY2gtaWNvbiI+PGkgY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tc2VhcmNoIj48L2k+PC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgICA8L2xpPgogICAgICAgICAgI2lmICgkaXNSZWdpc3RlcmVkKQogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9InVzZXIgbG9nZ2VkLWluIiBpZD0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkaGFuZGhlbGRCYW5uZXJVc2VyTGlua3NMaW5rSWQpIj4KICAgICAgICAgICAgICAgICAgJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ3VzZXInKQogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICA8YSBocmVmPSIjIiBjbGFzcz0icG9wdXAtbGlzdC1jb3VudCIgaWQ9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGhhbmRoZWxkQmFubmVyVXNlckxpbmtzQ291bnRJZCkiPjwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICNlbHNlCiAgICAgICAgICAgICNzZXQoJHVybCA9ICRjb3JlX3YyX3VybHMuTG9naW4oKSkKICAgICAgICAgICAgI2lmICgkdXJsKQogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkdXJsKSIgY2xhc3M9InVzZXIiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tdXNlciI+PC9zcGFuPgogICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgI2VuZAogICAgICAgICAgI2VuZAoJCQkJCTxsaSBjbGFzcz0iaGFtYnVyZ2VyIj4KICAgICAgICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9Im5hdmJhci10b2dnbGUiIGRhdGEtdG9nZ2xlPSJzaXRlLW1lbnUiPgogICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLW1lbnUtaGFtYnVyZ2VyIj48L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICAgIDwvbGk+CgkJCQk8L3VsPgoKCQkJCTxkaXYgY2xhc3M9InV0aWxpdHktZHJvcGRvd24gbW9iaWxlIiBpZD0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkdXRpbGl0eURyb3Bkb3duKSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ1c2VyLWxpbmtzIiBzdHlsZT0iZGlzcGxheTpub25lIiBpZD0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkaGFuZGhlbGRCYW5uZXJVc2VyTGlua3NJZCkiPgoJCQkJCQk8dWwgY2xhc3M9InV0aWxpdHkiPjwvdWw+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCgkJCTwvZGl2PgoJCTwvZGl2PgoJPC9uYXY+CjwvaGVhZGVyPgoKI3JlZ2lzdGVyRW5kT2ZQYWdlSHRtbCgndGVsbGlnZW50LmV2b2x1dGlvbi53aWRnZXRzLnNpdGVCYW5uZXInKQoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2h0bWwiIGlkPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRub3RpZmljYXRpb25QcmVmZXJlbmNlVGVtcGxhdGUpIj4KCQk8ZGl2IGNsYXNzPSJub3RpZmljYXRpb24tcHJlZmVyZW5jZSI+CgkJCTxzcGFuIGNsYXNzPSJkZXNjcmlwdGlvbiI+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ1R1cm5PZmZRdWVzdGlvbicpIDxzdHJvbmc+PCU6IG5vdGlmaWNhdGlvblR5cGVOYW1lICU+PC9zdHJvbmc+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ1R1cm5PZmZRdWVzdGlvblN1ZmZpeCcpPC9zcGFuPgoJCQk8YSBocmVmPSIjIiBjbGFzcz0iY29uZmlybSBpbnRlcm5hbC1saW5rIGJ1dHRvbiBzdWJtaXQtYnV0dG9uIiBkYXRhLW5vdGlmaWNhdGlvbnR5cGVpZD0iPCU6IG5vdGlmaWNhdGlvblR5cGVJZCAlPiI+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ1R1cm5PZmYnKTwvYT4KCQkJPGEgaHJlZj0iIyIgY2xhc3M9ImNhbmNlbCBpbnRlcm5hbC1saW5rIGJ1dHRvbiBzdWJtaXQtYnV0dG9uIj4kY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnQ2FuY2VsJyk8L2E+CgkJPC9kaXY+Cgk8L3NjcmlwdD4KCgk8c2NyaXB0IHR5cGU9InRleHQvaHRtbCIgaWQ9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGxpc3RUZW1wbGF0ZSkiPgoJCTxkaXY+CgkJCTxkaXYgY2xhc3M9Im11bHRpcGxlLWNvbHVtbi1saXN0IGNvbHVtbnMtMSI+CgkJCQk8ZGl2IGNsYXNzPSJtdWx0aXBsZS1jb2x1bW4taXRlbSBjb2x1bW4tMSI+CgkJCQkJPHVsIGNsYXNzPSJjb250ZW50LWxpc3QgY29udGVudCI+CgkJCQkJPC91bD4KCQkJCQk8ZGl2IGNsYXNzPSJsb2FkaW5nIj4kY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnbG9hZGluZycpPC9kaXY+CgkJCQkJPCUgaWYoZm9vdGVyQ29udGVudCkgeyAlPgoJCQkJCQk8ZGl2IGNsYXNzPSJjb250ZW50LWxpc3QtZm9vdGVyIj4KCQkJCQkJCTwlPSBmb290ZXJDb250ZW50ICU+CgkJCQkJCTwvZGl2PgoJCQkJCTwlIH0gJT4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KCQk8L2Rpdj4KCTwvc2NyaXB0PgoKCTxzY3JpcHQgdHlwZT0idGV4dC9odG1sIiBpZD0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkYm9va21hcmtGaWx0ZXJUZW1wbGF0ZSkiPgoJCTx1bCBjbGFzcz0ibmF2aWdhdGlvbi1saXN0IGZpbHRlciI+CgkJCTwlIGlmKGNvbnRlbnRUeXBlSWRzICYmIGNvbnRlbnRUeXBlSWRzLmxlbmd0aCA+IDApIHsgJT4KCQkJCTxsaSBjbGFzcz0ibmF2aWdhdGlvbi1pdGVtIGNvbnZlcnNhdGlvbnMiPgoJCQkJCTxhIGNsYXNzPSJpbnRlcm5hbC1saW5rIiBocmVmPSIjIiBkYXRhLWNvbnRlbnR0eXBlaWRzPSI8JTogY29udGVudFR5cGVJZHMgJT4iPiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdCb29rbWFya19GaWx0ZXJfQ29udGVudCcpPC9hPgoJCQkJPC9saT4KCQkJPCUgfSAlPgoJCQk8JSBpZihhcHBsaWNhdGlvbkNvbnRlbnRUeXBlSWRzICYmIGFwcGxpY2F0aW9uQ29udGVudFR5cGVJZHMubGVuZ3RoID4gMCkgeyAlPgoJCQkJPGxpIGNsYXNzPSJuYXZpZ2F0aW9uLWl0ZW0gY29udmVyc2F0aW9ucyI+CgkJCQkJPGEgY2xhc3M9ImludGVybmFsLWxpbmsiIGhyZWY9IiMiIGRhdGEtY29udGVudHR5cGVpZHM9IjwlOiBhcHBsaWNhdGlvbkNvbnRlbnRUeXBlSWRzICU+Ij4kY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnQm9va21hcmtfRmlsdGVyX0FwcGxpY2F0aW9uJyk8L2E+CgkJCQk8L2xpPgoJCQk8JSB9ICU+CgkJCTwlIGlmKGNvbnRhaW5lclR5cGVzICYmIGNvbnRhaW5lclR5cGVzLmxlbmd0aCA+IDApIHsgJT4KCQkJCTwlIGZvcmVhY2goY29udGFpbmVyVHlwZXMsIGZ1bmN0aW9uKGNvbnRhaW5lclR5cGUpIHsgICU+CgkJCQkJPGxpIGNsYXNzPSJuYXZpZ2F0aW9uLWl0ZW0gY29udmVyc2F0aW9ucyI+CgkJCQkJCTxhIGNsYXNzPSJpbnRlcm5hbC1saW5rIiBocmVmPSIjIiBkYXRhLWNvbnRlbnR0eXBlaWRzPSI8JTogY29udGFpbmVyVHlwZS5pZCAlPiI+PCU6IGNvbnRhaW5lclR5cGUubmFtZSAlPjwvYT4KCQkJCQk8L2xpPgoJCQkJPCUgfSk7ICU+CgkJCTwlIH0gJT4KCQk8L3VsPgoJPC9zY3JpcHQ+CgoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2h0bWwiIGlkPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRub3RpZmljYXRpb25GaWx0ZXJUZW1wbGF0ZSkiPgoJCTx1bCBjbGFzcz0ibmF2aWdhdGlvbi1saXN0IGZpbHRlciI+CgkJCTxsaSBjbGFzcz0ibmF2aWdhdGlvbi1pdGVtIGFsbCI+CgkJCQk8YSBjbGFzcz0iaW50ZXJuYWwtbGluayIgaHJlZj0iIyIgZGF0YS1maWx0ZXI9ImFsbCI+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ05vdGlmaWNhdGlvbl9GaWx0ZXJfQWxsJyk8L2E+CgkJCTwvbGk+CgkJCTxsaSBjbGFzcz0ibmF2aWdhdGlvbi1pdGVtIHVucmVhZCI+CgkJCQk8YSBjbGFzcz0iaW50ZXJuYWwtbGluayIgaHJlZj0iIyIgZGF0YS1maWx0ZXI9InVucmVhZCI+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ05vdGlmaWNhdGlvbl9GaWx0ZXJfVW5yZWFkJyk8L2E+CgkJCTwvbGk+CgkJPC91bD4KCTwvc2NyaXB0PgoKCTxzY3JpcHQgdHlwZT0idGV4dC9odG1sIiBpZD0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkc2VhcmNoRmlsdGVyVGVtcGxhdGUpIj4KCQk8JSBpZihwbGFjZXMgJiYgcGxhY2VzLmxlbmd0aCA+IDApIHsgJT4KCQkJPHVsIGNsYXNzPSJuYXZpZ2F0aW9uLWxpc3QgZmlsdGVyIj4KCQkJCTwlIGZvcmVhY2gocGxhY2VzLCBmdW5jdGlvbihwbGFjZSkgeyAlPgoJCQkJCTxsaSBjbGFzcz0ibmF2aWdhdGlvbi1pdGVtIj4KCQkJCQkJPGEgY2xhc3M9InBsYWNlIGludGVybmFsLWxpbmsiIGhyZWY9IiMiIGRhdGEta2V5PSI8JTogcGxhY2Uua2V5ICU+IiBkYXRhLXZhbHVlPSI8JTogcGxhY2UudmFsdWUgJT4iIGRhdGEtc2VhcmNocGFyYW09IjwlOiBwbGFjZS5zZWFyY2hQYXJhbWV0ZXIgJT4iIGRhdGEtc2VhcmNodmFsdWU9IjwlOiBwbGFjZS5zZWFyY2hWYWx1ZSAlPiI+PCU9IHBsYWNlLm5hbWUgJT48L2E+CgkJCQk8JSB9KTsgJT4KCQkJPC91bD4KCQk8JSB9ICU+CgoJCTwlIGlmKGZpbHRlcnMgJiYgZmlsdGVycy5sZW5ndGggPiAwKSB7ICU+CgkJCTx1bCBjbGFzcz0ibmF2aWdhdGlvbi1saXN0IGZpbHRlciI+CgkJCTwlIGZvcmVhY2goZmlsdGVycywgZnVuY3Rpb24oZmlsdGVyKSB7ICAlPgoJCQkJPGxpIGNsYXNzPSJuYXZpZ2F0aW9uLWl0ZW0iPgoJCQkJCTxhIGNsYXNzPSJ0eXBlIGludGVybmFsLWxpbmsiIGhyZWY9IiMiIGRhdGEta2V5PSI8JTogZmlsdGVyLmtleSAlPiI+PCU9IGZpbHRlci5uYW1lICU+PC9hPgoJCQkJPC9saT4KCQkJPCUgfSk7ICU+CgkJCTwvdWw+CgkJPCUgfSAlPgoJPC9zY3JpcHQ+CgoJPHNjcmlwdCB0eXBlPSJ0ZXh0L2h0bWwiIGlkPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCR1c2VyVGVtcGxhdGUpIj4KCQk8ZGl2IGNsYXNzPSJ1c2VyIj4KCQkJPGRpdiBjbGFzcz0iYXZhdGFyIj4KCQkJCTxhIGhyZWY9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJHVzZXIuUHJvZmlsZVVybCkiPgoJCQkJCSRjb3JlX3YyX3VpLkdldFJlc2l6ZWRJbWFnZUh0bWwoJHVzZXIuQXZhdGFyVXJsLCA0MCwgNDAsICIleyBSZXNpemVNZXRob2QgPSAnWm9vbUFuZENyb3AnIH0iKQoJCQkJPC9hPgoJCQk8L2Rpdj4KCQkJPHNwYW4gY2xhc3M9InVzZXItbmFtZSI+CgkJCQk8YSBocmVmPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCR1c2VyLlByb2ZpbGVVcmwpIj4kY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCR1c2VyLkRpc3BsYXlOYW1lKTwvYT4KCQkJPC9zcGFuPgoKCQkJI3NldCgkYXV0aFR5cGUgPSBmYWxzZSkKCQkJI3NldCgkYXV0aFR5cGUgPSAkY29yZV92Ml9hdXRoZW50aWNhdGlvbi5HZXRMYXN0TG9naW5UeXBlKCkpCgkJCSNpZiAoJGF1dGhUeXBlICYmICRhdXRoVHlwZSAhPSAnJykKCQkJCSNzZXQoJG9hdGhQcm92aWRlciA9IGZhbHNlKQoJCQkJI3NldCgkb2F0aFByb3ZpZGVyID0gJGNvcmVfdjJfYXV0aGVudGljYXRpb24uR2V0T0F1dGhQcm92aWRlcigkYXV0aFR5cGUpKQoJCQkJI2lmICgkb2F0aFByb3ZpZGVyKQoJCQkJCTxzcGFuIGNsYXNzPSJvYXV0aC1wcm92aWRlciI+CgkJCQkJCSRjb3JlX3YyX3VpLkdldFJlc2l6ZWRJbWFnZUh0bWwoJG9hdGhQcm92aWRlci5JY29uVXJsLCAxOCwgMTgsICIleyBib3JkZXI9JzAnLCBhbHQgPSAkb2F0aFByb3ZpZGVyLkNsaWVudE5hbWUsIGNsYXNzID0gJ3VpLXRpcCcsIFJlc2l6ZU1ldGhvZCA9ICdab29tQW5kQ3JvcCcgfSIpCgkJCQkJPC9zcGFuPgoJCQkJI2VuZAoJCQkjZW5kCgkJPC9kaXY+CgoJCSNzZXQoJGhhc1VzZXJMaW5rcyA9IHRydWUpCgkJI3NldCAoJHVzZXJMaW5rcyA9ICRsaW5rcy5WYWx1ZXMoJ0xpbmsnKSkKCQkjZm9yZWFjaCgkbGluayBpbiAkdXNlckxpbmtzKQoJCSNiZWZvcmVhbGwKCQkJPHVsIGNsYXNzPSJuYXZpZ2F0aW9uLWxpc3QgdXNlciI+CgkJI2VhY2gKCQkJI2lmKCRsaW5rID09ICdVc2VySW5mb3JtYXRpb24nKQoJCQkJI3NldCgkdXJsID0gZmFsc2UpCgkJCQkjc2V0KCR1cmwgPSAkdXNlci5Qcm9maWxlVXJsKQoJCQkJI2lmICgkdXJsKQoJCQkJCTxsaSBjbGFzcz0ibmF2aWdhdGlvbi1saXN0LWl0ZW0iPgoJCQkJCQk8YSBocmVmPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCR1c2VyLlByb2ZpbGVVcmwpIj4kY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnTGlua3NfVXNlcl9Qcm9maWxlJyk8L2E+CgkJCQkJPC9saT4KCQkJCQkjc2V0KCRoYXNVc2VyTGlua3MgPSB0cnVlKQoJCQkJI2VuZAoJCQkjZWxzZWlmKCRsaW5rID09ICdTZXR0aW5ncycpCgkJCQkjc2V0KCR1cmwgPSBmYWxzZSkKCQkJCSNzZXQoJHVybCA9ICRjb3JlX3YyX3VybHMuU2V0dGluZ3MoKSkKCQkJCSNpZiAoJHVybCkKCQkJCQk8bGkgY2xhc3M9Im5hdmlnYXRpb24tbGlzdC1pdGVtIj4KCQkJCQkJPGEgaHJlZj0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkdXJsKSI+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ0xpbmtzX1VzZXJfU2V0dGluZ3MnKTwvYT4KCQkJCQk8L2xpPgoJCQkJCSNzZXQoJGhhc1VzZXJMaW5rcyA9IHRydWUpCgkJCQkjZW5kCgkJCSNlbHNlaWYoJGxpbmsgPT0gJ0ludml0ZScpCgkJCQkjc2V0KCR1cmwgPSBmYWxzZSkKCQkJCSNzZXQoJHVybCA9ICRjb3JlX3YyX3VybHMuSW52aXRlKCkpCgkJCQkjaWYgKCR1cmwpCgkJCQkJPGxpIGNsYXNzPSJuYXZpZ2F0aW9uLWxpc3QtaXRlbSI+CgkJCQkJCTxhIGhyZWY9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJHVybCkiPiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdMaW5rc19Vc2VyX0ludml0ZScpPC9hPgoJCQkJCTwvbGk+CgkJCQkJI3NldCgkaGFzVXNlckxpbmtzID0gdHJ1ZSkKCQkJCSNlbmQKCQkJI2Vsc2VpZigkbGluayA9PSAnU2lnbk91dCcpCgkJCQkjc2V0KCR1cmwgPSBmYWxzZSkKCQkJCSNzZXQoJHVybCA9ICRjb3JlX3YyX3VybHMuTG9nT3V0KCkpCgkJCQkjaWYgKCR1cmwpCgkJCQkJPGxpIGNsYXNzPSJuYXZpZ2F0aW9uLWxpc3QtaXRlbSBsb2dvdXQiPgoJCQkJCQk8YSBocmVmPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCR1cmwpIiBjbGFzcz0iaW50ZXJuYWwtbGluayBsb2dvdXQiPgoJCQkJCQkJI2lmKCRpc0ltcGVyc29uYXRlZCkkY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnU3RvcEltcGVyc29uYXRpbmcnKSNlbHNlJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ0xpbmtzX1VzZXJfTG9nb3V0JykjZW5kCgkJCQkJCTwvYT4KCQkJCQk8L2xpPgoJCQkJCSNzZXQoJGhhc1VzZXJMaW5rcyA9IHRydWUpCgkJCQkjZW5kCgkJCSNlbmQKCQkjYWZ0ZXJhbGwKCQkJPC91bD4KCQkjZW5kCgk8L3NjcmlwdD4KCgk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRjb3JlX3YyX3dpZGdldC5HZXRGaWxlVXJsKCd1aS12Mi5qcycpKSI+PC9zY3JpcHQ+CiNlbmQKCiNyZWdpc3RlckVuZE9mUGFnZUh0bWwoKQo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgI3NldCgkRFEgPSAnIicpCgogICNzZXQoJGNvbnZlcnNhdGlvbkxpc3RGb290ZXJDb250ZW50ID0gIjxhIGhyZWY9JHtEUX0ke2NvcmVfdjJfdXJscy5Db252ZXJzYXRpb25zKCl9JHtEUX0gY2xhc3M9JHtEUX1sZWZ0JHtEUX0+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ0NvbnZlcnNhdGlvbnNfTW9yZScpPC9hPjxhIGhyZWY9JHtEUX0jJHtEUX0gZGF0YS1tZXNzYWdlbmFtZT0ke0RRfXdpZGdldC4ke2NvcmVfdjJfd2lkZ2V0LldyYXBwZXJFbGVtZW50SWR9LnN0YXJ0Y29udmVyc2F0aW9uJHtEUX0gY2xhc3M9JHtEUX1yaWdodCR7RFF9PiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdDb252ZXJzYXRpb25fU2VuZCcpPC9hPiIpCgoKICAjc2V0KCRub3RpZmljYXRpb25TZXR0aW5nc1VybCA9ICRjb3JlX3YyX3VybHMuU2V0dGluZ3MoKSkKICAjc2V0KCRub3RpZmljYXRpb25MaXN0Rm9vdGVyQ29udGVudCA9ICI8YSBocmVmPSR7RFF9IyR7RFF9IGNsYXNzPSR7RFF9bWFyay1yZWFkIGxlZnQke0RRfSAjaWYgKCRub3RpZmljYXRpb25zVW5yZWFkID09IDApIHN0eWxlPSR7RFF9ZGlzcGxheTpub25lJHtEUX0gI2VuZD4kY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnTm90aWZpY2F0aW9uc19NYXJrJyk8L2E+PGEgY2xhc3M9JHtEUX1yaWdodCR7RFF9IGhyZWY9JHtEUX0ke25vdGlmaWNhdGlvblNldHRpbmdzVXJsfSR7RFF9PiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdMaW5rc19Vc2VyX1NldHRpbmdzJyk8L2E+IikKCiAgI3NldCgkYm9va21hcmtzVXJsID0gJGNvcmVfdjJfdXJscy5GYXZvcml0ZXMoJGNvcmVfdjJfdXNlci5BY2Nlc3NpbmcuSWQpKQogICNzZXQoJGJvb2ttYXJrc0xpc3RGb290ZXJDb250ZW50ID0gIjxhIGNsYXNzPSR7RFF9bGVmdCR7RFF9IGhyZWY9JHtEUX0ke2Jvb2ttYXJrc1VybH0ke0RRfT4kY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnQm9va21hcmtzX01vcmUnKTwvYT4iKQogICMjIHBvc3NpYmx5IHNob3cgYm9va21hcmsvdW5ib29rbWFyayBsaW5rCiAgI2lmICgkaXNSZWdpc3RlcmVkICYmICRjdXJyZW50Q29udGVudCAmJiAkdXNlciAmJiAkY3VycmVudENvbnRlbnQuQ29udGVudElkICE9ICR1c2VyLkNvbnRlbnRJZCkKICAgICNzZXQgKCRjdXJyZW50Q29udGVudEJvb2ttYXJrID0gJGNvcmVfdjJfYm9va21hcmsuR2V0KCRjdXJyZW50Q29udGVudC5Db250ZW50SWQpKQogICAgI2lmICgkY3VycmVudENvbnRlbnRCb29rbWFyaykKICAgICAgI3NldCAoJGlzQm9va21hcmtlZCA9IHRydWUpCiAgICAjZW5kCiAgICAjc2V0ICgkY3VycmVudENvbnRlbnRJZCA9ICRjdXJyZW50Q29udGVudC5Db250ZW50SWQpCiAgICAjc2V0ICgkYm9va21hcmtDb21wb25lbnQgPSAkY29yZV92Ml91aS5Cb29rbWFyaygkY3VycmVudENvbnRlbnQuQ29udGVudElkLCAkY3VycmVudENvbnRlbnQuQ29udGVudFR5cGVJZCwgIiV7IENzc0NsYXNzID0gJ3JpZ2h0JyB9IikpCiAgICAjc2V0ICgkYm9va21hcmtzTGlzdEZvb3RlckNvbnRlbnQgPSAiJHtib29rbWFya3NMaXN0Rm9vdGVyQ29udGVudH0ke2Jvb2ttYXJrQ29tcG9uZW50fSIpCiAgI2VuZAoKICAjc2V0KCRzZWFyY2hMaXN0Rm9vdGVyQ29udGVudCA9ICI8YSBkYXRhLW1lc3NhZ2VuYW1lPSR7RFF9d2lkZ2V0LiR7Y29yZV92Ml93aWRnZXQuV3JhcHBlckVsZW1lbnRJZH0uYWR2YW5jZWRzZWFyY2gke0RRfSBpZD0ke0RRfSRjb3JlX3YyX3dpZGdldC5VbmlxdWVJZCgnYWR2YW5jZWRzZWFyY2gnKSR7RFF9IGhyZWY9JHtEUX0jJHtEUX0+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ0FkdmFuY2VkX1NlYXJjaCcpPC9hPiIpCgogIGpRdWVyeShmdW5jdGlvbigpewogICAgalF1ZXJ5LnRlbGxpZ2VudC5ldm9sdXRpb24ud2lkZ2V0cy5zaXRlQmFubmVyLnJlZ2lzdGVyKHsKICAgICAgd3JhcHBlcjogJyMkY29yZV92Ml93aWRnZXQuV3JhcHBlckVsZW1lbnRJZCcsCgogICAgICBtZXNzYWdlUHJlZml4OiAnd2lkZ2V0LiR7Y29yZV92Ml93aWRnZXQuV3JhcHBlckVsZW1lbnRJZH0uJywKICAgICAgYmFubmVyOiBqUXVlcnkoJyMkY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRiYW5uZXJJZCknKSwKCiAgICAgICAgICAgICAgdXNlUm9vdEZvb3RlcjogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJHVzZVJvb3RGb290ZXIpJywKICAgICAgaGFuZGhlbGRTZWFyY2hGaWVsZHNMaW5rOiBqUXVlcnkoJyMkY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRoYW5kaGVsZFNlYXJjaEZpZWxkc0xpbmtJZCknKSwKICAgICAgaGFuZGhlbGRTZWFyY2hGaWVsZHM6IGpRdWVyeSgnIyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJHNlYXJjaEZpZWxkc0lkKScpLAogICAgICBoYW5kaGVsZEJhbm5lckxpbmtzTGluazogalF1ZXJ5KCcjJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkaGFuZGhlbGRCYW5uZXJVc2VyTGlua3NMaW5rSWQpJyksCiAgICAgIGhhbmRoZWxkQmFubmVyTGlua3M6IGpRdWVyeSgnIyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGhhbmRoZWxkQmFubmVyVXNlckxpbmtzSWQpJyksCiAgICAgIHNlYXJjaEZpZWxkczogalF1ZXJ5KCcjJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkc2VhcmNoRmllbGRzSWQpJyksCgogICAgICB1dGlsaXR5RHJvcGRvd246IGpRdWVyeSgnIyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJHV0aWxpdHlEcm9wZG93biknKSwKCiAgICAgIGJhbm5lckxpbmtzOiBqUXVlcnkoJyMkY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRiYW5uZXJVc2VyTGlua3NJZCknKSwKICAgICAgaGFuZGhlbGRCYW5uZXJMaW5rc0NvdW50OiBqUXVlcnkoJyMkY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRoYW5kaGVsZEJhbm5lclVzZXJMaW5rc0NvdW50SWQpJyksCiAgICAgIGJhbm5lclNpdGVMaW5rczogalF1ZXJ5KCcjJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkYmFubmVyU2l0ZUxpbmtzSWQpJyksCiAgICAgIGhhbmRoZWxkU2l0ZUxpbmtzTGluazogalF1ZXJ5KCcjJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkaGFuZGhlbGRTaXRlTGlua3NMaW5rSWQpJyksCiAgICAgIGhhbmRoZWxkU2l0ZUxpbmtzOiBqUXVlcnkoJyMkY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRoYW5kaGVsZFNpdGVMaW5rc0lkKScpLAoKICAgICAgbm90aWZpY2F0aW9uc1RlbXBsYXRlOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkbGlzdFRlbXBsYXRlKScsCiAgICAgIG5vdGlmaWNhdGlvbnNVcmw6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRjb3JlX3YyX3dpZGdldC5HZXRFeGVjdXRlZEZpbGVVcmwoJ25vdGlmaWNhdGlvbnMudm0nKSknLAogICAgICBub3RpZmljYXRpb25zTGluazogalF1ZXJ5KCcjJGNvcmVfdjJfd2lkZ2V0LlVuaXF1ZUlkKCdub3RpZmljYXRpb25zJyknKSwKICAgICAgbm90aWZpY2F0aW9uc1VucmVhZDogJG5vdGlmaWNhdGlvbnNVbnJlYWQsCiAgICAgIG5vdGlmaWNhdGlvbkxpc3RGb290ZXJDb250ZW50OiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkbm90aWZpY2F0aW9uTGlzdEZvb3RlckNvbnRlbnQpJywKICAgICAgbm90aWZpY2F0aW9uUHJlZmVyZW5jZVRlbXBsYXRlOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkbm90aWZpY2F0aW9uUHJlZmVyZW5jZVRlbXBsYXRlKScsCiAgICAgIG5vdGlmaWNhdGlvbnNzVW5yZWFkQ291bnRNZXNzYWdlU2luZ3VsYXI6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdOb3RpZmljYXRpb25zX1VucmVhZENvdW50TWVzc2FnZVNpbmd1bGFyJykpJywKICAgICAgbm90aWZpY2F0aW9uc3NVbnJlYWRDb3VudE1lc3NhZ2VQbHVyYWw6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdOb3RpZmljYXRpb25zX1VucmVhZENvdW50TWVzc2FnZVBsdXJhbCcpKScsCiAgICAgIG5vdGlmaWNhdGlvbnNGaWx0ZXJUZW1wbGF0ZTogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJG5vdGlmaWNhdGlvbkZpbHRlclRlbXBsYXRlKScsCgogICAgICBjb252ZXJzYXRpb25zVGVtcGxhdGU6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRsaXN0VGVtcGxhdGUpJywKICAgICAgY29udmVyc2F0aW9uc1VybDogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvcmVfdjJfd2lkZ2V0LkdldEV4ZWN1dGVkRmlsZVVybCgnY29udmVyc2F0aW9ucy52bScpKScsCiAgICAgIGNvbnZlcnNhdGlvbnNMaW5rOiBqUXVlcnkoJyMkY29yZV92Ml93aWRnZXQuVW5pcXVlSWQoJ2NvbnZlcnNhdGlvbnMnKScpLAogICAgICBjb252ZXJzYXRpb25zVW5yZWFkOiAkY29udmVyc2F0aW9uc1VucmVhZCwKICAgICAgY29udmVyc2F0aW9uTm90aWZpY2F0aW9uVHlwZUlkOiAnJGNvcmVfdjJfY29udmVyc2F0aW9uTWVzc2FnZS5Ob3RpZmljYXRpb25UeXBlSWQnLAogICAgICBjb252ZXJzYXRpb25MaXN0Rm9vdGVyQ29udGVudDogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvbnZlcnNhdGlvbkxpc3RGb290ZXJDb250ZW50KScsCiAgICAgIGNvbnZlcnNhdGlvbnNVbnJlYWRDb3VudE1lc3NhZ2VTaW5ndWxhcjogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ0NvbnZlcnNhdGlvbnNfVW5yZWFkQ291bnRNZXNzYWdlU2luZ3VsYXInKSknLAogICAgICBjb252ZXJzYXRpb25zVW5yZWFkQ291bnRNZXNzYWdlUGx1cmFsOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnQ29udmVyc2F0aW9uc19VbnJlYWRDb3VudE1lc3NhZ2VQbHVyYWwnKSknLAogICAgICBjb252ZXJzYXRpb25OZXdDb252ZXJzYXRpb25Nb2RhbFVybDogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvcmVfdjJfdXJscy5BZGRDb252ZXJzYXRpb24oKSknLAoKICAgICAgYm9va21hcmtzVGVtcGxhdGU6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRsaXN0VGVtcGxhdGUpJywKICAgICAgYm9va21hcmtzVXJsOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkY29yZV92Ml93aWRnZXQuR2V0RXhlY3V0ZWRGaWxlVXJsKCdib29rbWFya3Mudm0nKSknLAogICAgICBib29rbWFya3NMaW5rOiBqUXVlcnkoJyMkY29yZV92Ml93aWRnZXQuVW5pcXVlSWQoJ2Jvb2ttYXJrcycpJyksCiAgICAgIGJvb2ttYXJrc0xpc3RGb290ZXJDb250ZW50OiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkYm9va21hcmtzTGlzdEZvb3RlckNvbnRlbnQpJywKICAgICAgYm9va21hcmtzQ29udGVudFR5cGVzOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkY29udGVudFR5cGVzKScsCiAgICAgIGJvb2ttYXJrc0FwcGxpY2F0aW9uQ29udGVudFR5cGVzOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkYXBwbGljYXRpb25Db250ZW50VHlwZXMpJywKICAgICAgYm9va21hcmtzQ29udGFpbmVyQ29udGVudFR5cGVzOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkY29udGFpbmVyQ29udGVudFR5cGVzKScsCiAgICAgIGJvb2ttYXJrc0ZpbHRlclRlbXBsYXRlOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkYm9va21hcmtGaWx0ZXJUZW1wbGF0ZSknLAogICAgICBib29rbWFya3NJc0Jvb2ttYXJrZWQ6ICNpZigkaXNCb29rbWFya2VkKSB0cnVlICNlbHNlIGZhbHNlICNlbmQsCiAgICAgIGJvb2ttYXJrc0N1cnJlbnRDb250ZW50SWQ6ICckY3VycmVudENvbnRlbnRJZCcsCiAgICAgIGJvb2ttYXJrc0Jvb2ttYXJrczogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ0Jvb2ttYXJrcycpKScsCiAgICAgIGJvb2ttYXJrQWRkZWQ6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdCb29rbWFya19BZGRlZCcpKScsCiAgICAgIGJvb2ttYXJrUmVtb3ZlZDogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ0Jvb2ttYXJrX1JlbW92ZWQnKSknLAoKICAgICAgdXNlclBvcHVwVGVtcGxhdGU6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRsaXN0VGVtcGxhdGUpJywKICAgICAgdXNlckNvbnRlbnRUZW1wbGF0ZTogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJHVzZXJUZW1wbGF0ZSknLAogICAgICB1c2VyTGluazogalF1ZXJ5KCcjJGNvcmVfdjJfd2lkZ2V0LlVuaXF1ZUlkKCd1c2VyJyknKSwKCiAgICAgIHNlYXJjaFR5cGU6ICckc2l0ZVNlYXJjaCcsCiAgICAgICNpZiAoJHNpdGVTZWFyY2ggPT0gIkRlZmF1bHQiKQogICAgICBzZWFyY2hUZW1wbGF0ZTogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGxpc3RUZW1wbGF0ZSknLAogICAgICBzZWFyY2hVcmw6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRjb3JlX3YyX3dpZGdldC5HZXRFeGVjdXRlZEZpbGVVcmwoJ3NlYXJjaC52bScpKScsCiAgICAgIHNlYXJjaElucHV0OiBqUXVlcnkoJyMkY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRzZWFyY2hJZCknKSwKICAgICAgc2VhcmNoRm9vdGVyQ29udGVudDogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJHNlYXJjaExpc3RGb290ZXJDb250ZW50KScsCiAgICAgIHNlYXJjaEZpbHRlclRlbXBsYXRlOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkc2VhcmNoRmlsdGVyVGVtcGxhdGUpJywKICAgICAgc2VhcmNoQWR2YW5jZWRVcmw6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRjb3JlX3YyX3VybHMuU2VhcmNoKCIleyBRdWVyeVN0cmluZyA9ICd7MH0nIH0iKSknLAogICAgICBzZWFyY2hBZHZhbmNlZFVzZXJVcmw6ICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRjb3JlX3YyX3VybHMuVXNlckxpc3QoIiV7IFF1ZXJ5U3RyaW5nID0gJ3swfScgfSIpKScsCiAgICAgIHNlYXJjaEZpbHRlckNvbnRlbnROYW1lOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnU2VhcmNoX0ZpbHRlcl9Db250ZW50JykpJywKICAgICAgc2VhcmNoRmlsdGVyR3JvdXBzTmFtZTogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ1NlYXJjaF9GaWx0ZXJfR3JvdXBzJykpJywKICAgICAgc2VhcmNoRmlsdGVyUGVvcGxlTmFtZTogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ1NlYXJjaF9GaWx0ZXJfUGVvcGxlJykpJywKICAgICAgc2VhcmNoUGxhY2VBcHBsaWNhdGlvbklkOiAjaWYgKCRjdXJyZW50QXBwbGljYXRpb24pICckY3VycmVudEFwcGxpY2F0aW9uLkFwcGxpY2F0aW9uSWQnICNlbHNlIG51bGwgI2VuZCwKICAgICAgc2VhcmNoUGxhY2VBcHBsaWNhdGlvbk5hbWU6ICNpZiAoJGN1cnJlbnRBcHBsaWNhdGlvbikgJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuRm9ybWF0U3RyaW5nKCRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdTZWFyY2hfRmlsdGVyX0luJyksICRjdXJyZW50QXBwbGljYXRpb24uSHRtbE5hbWUoJycpKSknICNlbHNlIG51bGwgI2VuZCwKICAgICAgc2VhcmNoUGxhY2VHcm91cElkOiAjaWYgKCRjdXJyZW50R3JvdXApICckY3VycmVudEdyb3VwLkNvbnRhaW5lcklkJyAjZWxzZSBudWxsICNlbmQsCiAgICAgIHNlYXJjaFBsYWNlR3JvdXBMb2NhbElkOiAjaWYgKCRjdXJyZW50R3JvdXApICckY3VycmVudEdyb3VwLklkJyAjZWxzZSBudWxsICNlbmQsCiAgICAgIHNlYXJjaFBsYWNlR3JvdXBOYW1lOiAjaWYgKCRjdXJyZW50R3JvdXApICckY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRjb3JlX3YyX2xhbmd1YWdlLkZvcm1hdFN0cmluZygkY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnU2VhcmNoX0ZpbHRlcl9JbicpLCAkY3VycmVudEdyb3VwLk5hbWUpKScgI2Vsc2UgbnVsbCAjZW5kLAogICAgICBzZWFyY2hQbGFjZUFueXdoZXJlTmFtZTogJyRjb3JlX3YyX2VuY29kaW5nLkphdmFzY3JpcHRFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ1NlYXJjaF9GaWx0ZXJfQW55d2hlcmUnKSknLAogICAgICBhZHZhbmNlZFNlYXJjaElkOiAnJGNvcmVfdjJfd2lkZ2V0LlVuaXF1ZUlkKCdhZHZhbmNlZHNlYXJjaCcpJywKICAgICAgc2VhcmNoU2hvd1Blb3BsZTogI2lmKCRjb3JlX3YyX25vZGVQZXJtaXNzaW9uLkdldCgnU2l0ZV9SZWFkUHJvZmlsZXMnKS5Jc0FsbG93ZWQpIHRydWUjZWxzZSBmYWxzZSNlbmQsCiAgICAgICNlbHNlCiAgICAgIHNlYXJjaElucHV0OiBqUXVlcnkoJyMkY29yZV92Ml9lbmNvZGluZy5KYXZhc2NyaXB0RW5jb2RlKCRzZWFyY2hJZCknKSwKICAgICAgI2VuZAoKICAgICAgc2l0ZU5hdmlnYXRpb25UeXBlOiAnJGNvcmVfdjJfZW5jb2RpbmcuSmF2YXNjcmlwdEVuY29kZSgkc2l0ZU5hdmlnYXRpb25UeXBlKScKICAgIH0pOwogIH0pOwo8L3NjcmlwdD4KI2VuZAo=</file>
			<file name="notifications.vm">77u/I3NldCAoJGZpbHRlciA9ICRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19maWx0ZXInKSkNCiNzZXQgKCRwYWdlSW5kZXggPSAkY29yZV92Ml91dGlsaXR5LlBhcnNlSW50KCRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19wYWdlSW5kZXgnKSkpDQojc2V0ICgkcGFnZVNpemUgPSAxMCkNCg0KI3NldCAoJG9wdGlvbnMgPSAiJXsgUGFnZUluZGV4ID0gJHBhZ2VJbmRleCwgUGFnZVNpemUgPSAkcGFnZVNpemUgfSIpDQojc2V0ICgkY29udmVyc2F0aW9uTWVzc2FnZU5vdGlmaWNhdGlvbkZpbHRlck5hbWUgPSAiX0ZpbHRlcnNfJHtjb3JlX3YyX2NvbnZlcnNhdGlvbk1lc3NhZ2UuTm90aWZpY2F0aW9uVHlwZUlkfSIpDQokb3B0aW9ucy5BZGQoJGNvbnZlcnNhdGlvbk1lc3NhZ2VOb3RpZmljYXRpb25GaWx0ZXJOYW1lLCAnRXhjbHVkZScpDQojaWYgKCRmaWx0ZXIgPT0gJ3VucmVhZCcpDQoJJG9wdGlvbnMuQWRkKCdJc1JlYWQnLCAnZmFsc2UnKQ0KI2VuZA0KI3NldCAoJG5vdGlmaWNhdGlvbnMgPSAkY29yZV92Ml9ub3RpZmljYXRpb24uTGlzdCgkb3B0aW9ucykpDQoNCiNzZXQgKCRoYXNNb3JlID0gZmFsc2UpDQojc2V0ICgkY3VycmVudFBhZ2VkUXVhbnRpdHkgPSAoJG5vdGlmaWNhdGlvbnMuUGFnZUluZGV4ICsgMSkgKiAkbm90aWZpY2F0aW9ucy5QYWdlU2l6ZSkNCiNpZiAoJG5vdGlmaWNhdGlvbnMuVG90YWxDb3VudCA+ICRjdXJyZW50UGFnZWRRdWFudGl0eSkNCgkjc2V0ICgkaGFzTW9yZSA9IHRydWUpDQojZW5kDQoNCiNmb3JlYWNoICgkbm90aWZpY2F0aW9uIGluICRub3RpZmljYXRpb25zKQ0KCSNzZXQgKCRsYXN0QWN0b3IgPSBmYWxzZSkNCgkjc2V0ICgkYWN0b3JzID0gJG5vdGlmaWNhdGlvbi5BY3RvcnMpDQoJI3NldCAoJGxhc3RJbmRleCA9ICRhY3RvcnMuQ291bnQgLSAxKQ0KCSNzZXQgKCRsYXN0QWN0b3IgPSAkYWN0b3JzLlRvQXJyYXkoKS5nZXQoJGxhc3RJbmRleCkuVXNlcikNCgkjc2V0ICgkbm90aWZpY2F0aW9uVHlwZSA9ICRjb3JlX3YyX25vdGlmaWNhdGlvblR5cGUuR2V0KCRub3RpZmljYXRpb24uTm90aWZpY2F0aW9uVHlwZUlkKSkNCg0KCSNpZiAoJG5vdGlmaWNhdGlvblR5cGUuTm90aWZpY2F0aW9uVHlwZUlkID09ICRjb3JlX3YyX3JhdGVkSXRlbS5Ob3RpZmljYXRpb25UeXBlSWQpDQoJCSNzZXQgKCRsYXN0QWN0b3IgPSBmYWxzZSkNCgkjZW5kDQoNCgkjIyByZW5kZXIgbm90aWZpY2F0aW9uDQoJI3NldCAoJG5vdGlmaWNhdGlvbk1lc3NhZ2UgPSBmYWxzZSkNCgkjc2V0ICgkbm90aWZpY2F0aW9uTWVzc2FnZSA9ICRub3RpZmljYXRpb24uTWVzc2FnZSgnSHRtbCcpKQ0KCSNpZiAoJG5vdGlmaWNhdGlvbk1lc3NhZ2UpDQoJCTxsaSBjbGFzcz0iY29udGVudC1pdGVtICNpZighJG5vdGlmaWNhdGlvbi5Jc1JlYWQpIHVucmVhZCAjZW5kICNpZiAoISRsYXN0QWN0b3IpIG5vLWF1dGhvciAjZW5kIiBkYXRhLWNvbnRlbnR1cmw9IiRub3RpZmljYXRpb24uVGFyZ2V0VXJsIg0KCQkJZGF0YS1ub3RpZmljYXRpb25pZD0iJG5vdGlmaWNhdGlvbi5Ob3RpZmljYXRpb25JZCINCgkJCWRhdGEtbm90aWZpY2F0aW9udHlwZWlkPSIkbm90aWZpY2F0aW9uLk5vdGlmaWNhdGlvblR5cGVJZCINCgkJCWRhdGEtbm90aWZpY2F0aW9udHlwZW5hbWU9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJG5vdGlmaWNhdGlvblR5cGUuRGVzY3JpcHRpb24pIg0KCQkJI2lmKCRoYXNNb3JlKSBkYXRhLWhhc21vcmU9InRydWUiICNlbmQ+DQoNCgkJCSNpZiAoJGxhc3RBY3RvcikNCgkJCQk8ZGl2IGNsYXNzPSJwb3N0LWF1dGhvciI+DQoJCQkJCTxzcGFuIGNsYXNzPSJhdmF0YXIiPg0KCQkJCQkJI2lmICgkbGFzdEFjdG9yLlByb2ZpbGVVcmwpDQoJCQkJCQkJPGEgaHJlZj0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkbGFzdEFjdG9yLlByb2ZpbGVVcmwpIiBjbGFzcz0iaW50ZXJuYWwtbGluayB2aWV3LXVzZXItcHJvZmlsZSI+DQoJCQkJCQkJCSRjb3JlX3YyX3VpLkdldFJlc2l6ZWRJbWFnZUh0bWwoJGxhc3RBY3Rvci5BdmF0YXJVcmwsIDQwLCA0MCwgIiV7Ym9yZGVyPScwJywgYWx0PSRsYXN0QWN0b3IuRGlzcGxheU5hbWUsIFJlc2l6ZU1ldGhvZD0nWm9vbUFuZENyb3AnLGJvcmRlcj0nMCd9IikNCgkJCQkJCQk8L2E+DQoJCQkJCQkjZWxzZQ0KCQkJCQkJCSRjb3JlX3YyX3VpLkdldFJlc2l6ZWRJbWFnZUh0bWwoJGxhc3RBY3Rvci5BdmF0YXJVcmwsIDQwLCA0MCwgIiV7Ym9yZGVyPScwJywgYWx0PSRsYXN0QWN0b3IuRGlzcGxheU5hbWUsIFJlc2l6ZU1ldGhvZD0nWm9vbUFuZENyb3AnLGJvcmRlcj0nMCd9IikNCgkJCQkJCSNlbmQNCgkJCQkJPC9zcGFuPg0KCQkJCQk8c3BhbiBjbGFzcz0idXNlci1uYW1lIj4NCgkJCQkJCSNpZiAoJGxhc3RBY3Rvci5Qcm9maWxlVXJsKQ0KCQkJCQkJCTxhIGhyZWY9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGxhc3RBY3Rvci5Qcm9maWxlVXJsKSIgY2xhc3M9ImludGVybmFsLWxpbmsgdmlldy11c2VyLXByb2ZpbGUiPg0KCQkJCQkJCQkkbGFzdEFjdG9yLkRpc3BsYXlOYW1lDQoJCQkJCQkJPC9hPg0KCQkJCQkJI2Vsc2UNCgkJCQkJCQkkbGFzdEFjdG9yLkRpc3BsYXlOYW1lDQoJCQkJCQkjZW5kDQoJCQkJCTwvc3Bhbj4NCgkJCQk8L2Rpdj4NCgkJCSNlbmQNCgkJCTxkaXYgY2xhc3M9ImNvbnRlbnQiPg0KCQkJCSRub3RpZmljYXRpb25NZXNzYWdlDQoJCQk8L2Rpdj4NCgkJCTxkaXYgY2xhc3M9InBvc3QtZGF0ZSI+DQoJCQkJPHNwYW4gY2xhc3M9InZhbHVlIj4kY29yZV92Ml9sYW5ndWFnZS5Gb3JtYXRBZ29EYXRlKCRub3RpZmljYXRpb24uTGFzdFVwZGF0ZWREYXRlKTwvc3Bhbj4NCgkJCTwvZGl2Pg0KCQkJPGRpdiBjbGFzcz0icHJlZmVyZW5jZSI+DQoJCQkJPGEgaHJlZj0iIyIgdGl0bGU9IiRjb3JlX3YyX2VuY29kaW5nLkh0bWxBdHRyaWJ1dGVFbmNvZGUoJGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ1R1cm5PZmZOb3RpZmljYXRpb25zJykpIiBjbGFzcz0idWktdGlwIj5YPC9hPg0KCQkJPC9kaXY+DQoJCQkjaWYoISRub3RpZmljYXRpb24uSXNSZWFkKQ0KCQkJCTxkaXYgY2xhc3M9Im1hcmsiPg0KCQkJCQk8YSBocmVmPSIjIiB0aXRsZT0iJGNvcmVfdjJfZW5jb2RpbmcuSHRtbEF0dHJpYnV0ZUVuY29kZSgkY29yZV92Ml9sYW5ndWFnZS5HZXRSZXNvdXJjZSgnTm90aWZpY2F0aW9uc19NYXJrJykpIiBjbGFzcz0idWktdGlwIiBkYXRhLW1lc3NhZ2VuYW1lPSJ0ZWxsaWdlbnQuZXZvbHV0aW9uLndpZGdldHMudGhyZWFkLmhpZGVhdHRhY2htZW50Ij5PPC9hPg0KCQkJCTwvZGl2Pg0KCQkJI2VuZA0KCQk8L2xpPg0KCSNlbmQNCiNub2RhdGENCgk8ZGl2IGNsYXNzPSJtZXNzYWdlIG5vcmVjb3JkcyI+JGNvcmVfdjJfbGFuZ3VhZ2UuR2V0UmVzb3VyY2UoJ05vdGlmaWNhdGlvbnNfTm9uZScpPC9kaXY+DQojZW5kDQo=</file>
			<file name="search.vm">77u/I3NldCAoJHF1ZXJ5ID0gJGNvcmVfdjJfdXRpbGl0eS5UcmltKCRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19xdWVyeScpKSkNCiNzZXQgKCRwYWdlU2l6ZSA9IDEwKQ0KI3NldCAoJHBhZ2VJbmRleCA9ICRjb3JlX3YyX3V0aWxpdHkuUGFyc2VJbnQoJGNvcmVfdjJfcGFnZS5HZXRRdWVyeVN0cmluZ1ZhbHVlKCd3X3BhZ2VJbmRleCcpKSkNCiNzZXQgKCRwbGFjZUtleSA9ICRjb3JlX3YyX3BhZ2UuR2V0UXVlcnlTdHJpbmdWYWx1ZSgnd19wbGFjZUtleScpKQ0KI3NldCAoJHBsYWNlVmFsdWUgPSAkY29yZV92Ml9wYWdlLkdldFF1ZXJ5U3RyaW5nVmFsdWUoJ3dfcGxhY2VWYWx1ZScpKQ0KI3NldCAoJHR5cGUgPSAkY29yZV92Ml9wYWdlLkdldFF1ZXJ5U3RyaW5nVmFsdWUoJ3dfdHlwZScpKQ0KDQojc2V0ICgkc2VhcmNoUXVlcnkgPSAiJXt9IikNCiRzZWFyY2hRdWVyeS5BZGQoIlF1ZXJ5IiwgJHF1ZXJ5KQ0KJHNlYXJjaFF1ZXJ5LkFkZCgiUGFnZVNpemUiLCAkcGFnZVNpemUpDQokc2VhcmNoUXVlcnkuQWRkKCJQYWdlSW5kZXgiLCAkcGFnZUluZGV4KQ0KJHNlYXJjaFF1ZXJ5LkFkZCgnQ29sbGFwc2UnLCAnVHJ1ZScpDQoNCiNpZiAoJHBsYWNlS2V5ID09ICdhcHBsaWNhdGlvbicpDQoJJHNlYXJjaFF1ZXJ5LkFkZCgiQXBwbGljYXRpb25JZCIsICRwbGFjZVZhbHVlKQ0KI2Vsc2VpZiAoJHBsYWNlS2V5ID09ICdncm91cCcgJiYgJHR5cGUgIT0gJ2dyb3VwcycpDQoJJHNlYXJjaFF1ZXJ5LkFkZCgiQ29udGFpbmVySWQiLCAkcGxhY2VWYWx1ZSkNCiNlbmQNCg0KI2lmICgkdHlwZSA9PSAnZ3JvdXBzJykNCgkjaWYgKCRwbGFjZUtleSA9PSAnZ3JvdXAnKQ0KCQkjc2V0KCRwYXJlbnRHcm91cEZpbHRlciA9ICcnKQ0KCQkjc2V0KCRncm91cCA9ICRjb3JlX3YyX2dyb3VwLkdldCgkY29yZV92Ml91dGlsaXR5LlBhcnNlR3VpZCgkcGxhY2VWYWx1ZSkpKQ0KCQkjaWYgKCRncm91cCkNCgkJCSNzZXQoJHBhcmVudEdyb3VwRmlsdGVyID0gInx8cGFyZW50Z3JvdXA6OiR7Z3JvdXAuSWR9IikNCgkJI2VuZA0KCQkkc2VhcmNoUXVlcnkuQWRkKCdGaWx0ZXJzJywgImNvbnRlbnR0eXBlaWQ6OiR7Y29yZV92Ml9ncm91cC5Db250ZW50VHlwZUlkfSR7cGFyZW50R3JvdXBGaWx0ZXJ9IikNCgkjZWxzZQ0KCQkkc2VhcmNoUXVlcnkuQWRkKCdGaWx0ZXJzJywgImNvbnRlbnR0eXBlaWQ6OiRjb3JlX3YyX2dyb3VwLkNvbnRlbnRUeXBlSWQiKQ0KCSNlbmQNCiNlbHNlaWYgKCR0eXBlID09ICd1c2VycycpDQoJJHNlYXJjaFF1ZXJ5LkFkZCgnRmlsdGVycycsICJjb250ZW50dHlwZWlkOjokY29yZV92Ml91c2VyLkNvbnRlbnRUeXBlSWQiKQ0KI2Vsc2UNCgkjc2V0KCRmaWx0ZXJzID0gJycpDQoJI2ZvcmVhY2goJGNvbnRlbnRUeXBlIGluICRjb3JlX3YyX2NvbnRlbnRUeXBlLkxpc3QoKSkNCgkJI3NldCgkYXBwbGljYXRpb25UeXBlID0gZmFsc2UpDQoJCSNzZXQoJGFwcGxpY2F0aW9uVHlwZSA9ICRjb3JlX3YyX2FwcGxpY2F0aW9uVHlwZS5HZXQoJGNvbnRlbnRUeXBlLklkKSkNCgkJI3NldCgkY29udGFpbmVyVHlwZSA9IGZhbHNlKQ0KCQkjc2V0KCRjb250YWluZXJUeXBlID0gJGNvcmVfdjJfY29udGFpbmVyVHlwZS5HZXQoJGNvbnRlbnRUeXBlLklkKSkNCgkJI2lmICgoISRhcHBsaWNhdGlvblR5cGUgfHwgJGFwcGxpY2F0aW9uVHlwZS5IYXNFcnJvcnMoKSkgJiYgKCEkY29udGFpbmVyVHlwZSB8fCAkY29udGFpbmVyVHlwZS5IYXNFcnJvcnMoKSkpDQoJCQkjaWYgKCRmaWx0ZXJzLkxlbmd0aCA9PSAwKQ0KCQkJCSNzZXQoJGZpbHRlcnMgPSAiY29udGVudHR5cGVpZDo6KCR7Y29udGVudFR5cGUuSWR9IikNCgkJCSNlbHNlDQoJCQkJI3NldCgkZmlsdGVycyA9ICIke2ZpbHRlcnN9IE9SICR7Y29udGVudFR5cGUuSWR9IikNCgkJI2VuZA0KCQkjZW5kDQoJI2VuZA0KCSNpZigkZmlsdGVycy5MZW5ndGggPiAwKQ0KCQkkc2VhcmNoUXVlcnkuQWRkKCdGaWx0ZXJzJywgIiR7ZmlsdGVyc30pIikNCgkjZW5kDQojZW5kDQoNCg0KI3NldCAoJHNlYXJjaFJlc3VsdHMgPSAkY29yZV92Ml9zZWFyY2hSZXN1bHQuTGlzdCgkc2VhcmNoUXVlcnkpKQ0KDQojc2V0ICgkaGFzTW9yZSA9IGZhbHNlKQ0KI3NldCAoJGN1cnJlbnRQYWdlZFF1YW50aXR5ID0gKCRzZWFyY2hSZXN1bHRzLlBhZ2VJbmRleCArIDEpICogJHNlYXJjaFJlc3VsdHMuUGFnZVNpemUpDQojaWYgKCRzZWFyY2hSZXN1bHRzLlRvdGFsQ291bnQgPiAkY3VycmVudFBhZ2VkUXVhbnRpdHkpDQogICAgI3NldCAoJGhhc01vcmUgPSB0cnVlKQ0KI2VuZA0KDQojZm9yZWFjaCAoJHNlYXJjaFJlc3VsdCBpbiAkc2VhcmNoUmVzdWx0cykNCgk8bGkgY2xhc3M9ImNvbnRlbnQtaXRlbSIgZGF0YS1jb250ZW50dXJsPSIkY29yZV92Ml9lbmNvZGluZy5IdG1sQXR0cmlidXRlRW5jb2RlKCRzZWFyY2hSZXN1bHQuVXJsKSIgI2lmKCRoYXNNb3JlKSBkYXRhLWhhc21vcmU9InRydWUiICNlbmQ+DQoJCSNzZXQgKCRyZXN1bHRIdG1sID0gZmFsc2UpDQoJCSNzZXQgKCRyZXN1bHRIdG1sID0gJHNlYXJjaFJlc3VsdC5WaWV3SHRtbCgpKQ0KCQkjaWYgKCRyZXN1bHRIdG1sKQ0KCQkJJHJlc3VsdEh0bWwNCgkJI2VuZA0KCTwvbGk+DQojbm9kYXRhDQoJPGRpdiBjbGFzcz0ibWVzc2FnZSBub3JlY29yZHMiPiRjb3JlX3YyX2xhbmd1YWdlLkdldFJlc291cmNlKCdOb19SZXN1bHRzJyk8L2Rpdj4NCiNlbmQNCg==</file>
			<file name="ui-v2.js"></file>
			<file name="ui.css"></file>
			<file name="ui.js"></file>
		</files>
	</scriptedContentFragment>
</scriptedContentFragments>